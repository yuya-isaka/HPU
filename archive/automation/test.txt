else if (inst[3:0] == 4'd0) begin 
reg1 <= {data[-1:0], data[DIM:0]};
end
else if (inst[3:0] == 4'd1) begin 
reg1 <= {data[0:0], data[DIM:1]};
end
else if (inst[3:0] == 4'd2) begin 
reg1 <= {data[1:0], data[DIM:2]};
end
else if (inst[3:0] == 4'd3) begin 
reg1 <= {data[2:0], data[DIM:3]};
end
else if (inst[3:0] == 4'd4) begin 
reg1 <= {data[3:0], data[DIM:4]};
end
else if (inst[3:0] == 4'd5) begin 
reg1 <= {data[4:0], data[DIM:5]};
end
else if (inst[3:0] == 4'd6) begin 
reg1 <= {data[5:0], data[DIM:6]};
end
else if (inst[3:0] == 4'd7) begin 
reg1 <= {data[6:0], data[DIM:7]};
end
else if (inst[3:0] == 4'd8) begin 
reg1 <= {data[7:0], data[DIM:8]};
end
else if (inst[3:0] == 4'd9) begin 
reg1 <= {data[8:0], data[DIM:9]};
end
else if (inst[3:0] == 4'd10) begin 
reg1 <= {data[9:0], data[DIM:10]};
end
else if (inst[3:0] == 4'd11) begin 
reg1 <= {data[10:0], data[DIM:11]};
end
else if (inst[3:0] == 4'd12) begin 
reg1 <= {data[11:0], data[DIM:12]};
end
else if (inst[3:0] == 4'd13) begin 
reg1 <= {data[12:0], data[DIM:13]};
end
else if (inst[3:0] == 4'd14) begin 
reg1 <= {data[13:0], data[DIM:14]};
end
else if (inst[3:0] == 4'd15) begin 
reg1 <= {data[14:0], data[DIM:15]};
end
else if (inst[3:0] == 4'd16) begin 
reg1 <= {data[15:0], data[DIM:16]};
end
else if (inst[3:0] == 4'd17) begin 
reg1 <= {data[16:0], data[DIM:17]};
end
else if (inst[3:0] == 4'd18) begin 
reg1 <= {data[17:0], data[DIM:18]};
end
else if (inst[3:0] == 4'd19) begin 
reg1 <= {data[18:0], data[DIM:19]};
end
else if (inst[3:0] == 4'd20) begin 
reg1 <= {data[19:0], data[DIM:20]};
end
else if (inst[3:0] == 4'd21) begin 
reg1 <= {data[20:0], data[DIM:21]};
end
else if (inst[3:0] == 4'd22) begin 
reg1 <= {data[21:0], data[DIM:22]};
end
else if (inst[3:0] == 4'd23) begin 
reg1 <= {data[22:0], data[DIM:23]};
end
else if (inst[3:0] == 4'd24) begin 
reg1 <= {data[23:0], data[DIM:24]};
end
else if (inst[3:0] == 4'd25) begin 
reg1 <= {data[24:0], data[DIM:25]};
end
else if (inst[3:0] == 4'd26) begin 
reg1 <= {data[25:0], data[DIM:26]};
end
else if (inst[3:0] == 4'd27) begin 
reg1 <= {data[26:0], data[DIM:27]};
end
else if (inst[3:0] == 4'd28) begin 
reg1 <= {data[27:0], data[DIM:28]};
end
else if (inst[3:0] == 4'd29) begin 
reg1 <= {data[28:0], data[DIM:29]};
end
else if (inst[3:0] == 4'd30) begin 
reg1 <= {data[29:0], data[DIM:30]};
end
else if (inst[3:0] == 4'd31) begin 
reg1 <= {data[30:0], data[DIM:31]};
end
else if (inst[3:0] == 4'd32) begin 
reg1 <= {data[31:0], data[DIM:32]};
end
else if (inst[3:0] == 4'd33) begin 
reg1 <= {data[32:0], data[DIM:33]};
end
else if (inst[3:0] == 4'd34) begin 
reg1 <= {data[33:0], data[DIM:34]};
end
else if (inst[3:0] == 4'd35) begin 
reg1 <= {data[34:0], data[DIM:35]};
end
else if (inst[3:0] == 4'd36) begin 
reg1 <= {data[35:0], data[DIM:36]};
end
else if (inst[3:0] == 4'd37) begin 
reg1 <= {data[36:0], data[DIM:37]};
end
else if (inst[3:0] == 4'd38) begin 
reg1 <= {data[37:0], data[DIM:38]};
end
else if (inst[3:0] == 4'd39) begin 
reg1 <= {data[38:0], data[DIM:39]};
end
else if (inst[3:0] == 4'd40) begin 
reg1 <= {data[39:0], data[DIM:40]};
end
else if (inst[3:0] == 4'd41) begin 
reg1 <= {data[40:0], data[DIM:41]};
end
else if (inst[3:0] == 4'd42) begin 
reg1 <= {data[41:0], data[DIM:42]};
end
else if (inst[3:0] == 4'd43) begin 
reg1 <= {data[42:0], data[DIM:43]};
end
else if (inst[3:0] == 4'd44) begin 
reg1 <= {data[43:0], data[DIM:44]};
end
else if (inst[3:0] == 4'd45) begin 
reg1 <= {data[44:0], data[DIM:45]};
end
else if (inst[3:0] == 4'd46) begin 
reg1 <= {data[45:0], data[DIM:46]};
end
else if (inst[3:0] == 4'd47) begin 
reg1 <= {data[46:0], data[DIM:47]};
end
else if (inst[3:0] == 4'd48) begin 
reg1 <= {data[47:0], data[DIM:48]};
end
else if (inst[3:0] == 4'd49) begin 
reg1 <= {data[48:0], data[DIM:49]};
end
else if (inst[3:0] == 4'd50) begin 
reg1 <= {data[49:0], data[DIM:50]};
end
else if (inst[3:0] == 4'd51) begin 
reg1 <= {data[50:0], data[DIM:51]};
end
else if (inst[3:0] == 4'd52) begin 
reg1 <= {data[51:0], data[DIM:52]};
end
else if (inst[3:0] == 4'd53) begin 
reg1 <= {data[52:0], data[DIM:53]};
end
else if (inst[3:0] == 4'd54) begin 
reg1 <= {data[53:0], data[DIM:54]};
end
else if (inst[3:0] == 4'd55) begin 
reg1 <= {data[54:0], data[DIM:55]};
end
else if (inst[3:0] == 4'd56) begin 
reg1 <= {data[55:0], data[DIM:56]};
end
else if (inst[3:0] == 4'd57) begin 
reg1 <= {data[56:0], data[DIM:57]};
end
else if (inst[3:0] == 4'd58) begin 
reg1 <= {data[57:0], data[DIM:58]};
end
else if (inst[3:0] == 4'd59) begin 
reg1 <= {data[58:0], data[DIM:59]};
end
else if (inst[3:0] == 4'd60) begin 
reg1 <= {data[59:0], data[DIM:60]};
end
else if (inst[3:0] == 4'd61) begin 
reg1 <= {data[60:0], data[DIM:61]};
end
else if (inst[3:0] == 4'd62) begin 
reg1 <= {data[61:0], data[DIM:62]};
end
else if (inst[3:0] == 4'd63) begin 
reg1 <= {data[62:0], data[DIM:63]};
end
else if (inst[3:0] == 4'd64) begin 
reg1 <= {data[63:0], data[DIM:64]};
end
else if (inst[3:0] == 4'd65) begin 
reg1 <= {data[64:0], data[DIM:65]};
end
else if (inst[3:0] == 4'd66) begin 
reg1 <= {data[65:0], data[DIM:66]};
end
else if (inst[3:0] == 4'd67) begin 
reg1 <= {data[66:0], data[DIM:67]};
end
else if (inst[3:0] == 4'd68) begin 
reg1 <= {data[67:0], data[DIM:68]};
end
else if (inst[3:0] == 4'd69) begin 
reg1 <= {data[68:0], data[DIM:69]};
end
else if (inst[3:0] == 4'd70) begin 
reg1 <= {data[69:0], data[DIM:70]};
end
else if (inst[3:0] == 4'd71) begin 
reg1 <= {data[70:0], data[DIM:71]};
end
else if (inst[3:0] == 4'd72) begin 
reg1 <= {data[71:0], data[DIM:72]};
end
else if (inst[3:0] == 4'd73) begin 
reg1 <= {data[72:0], data[DIM:73]};
end
else if (inst[3:0] == 4'd74) begin 
reg1 <= {data[73:0], data[DIM:74]};
end
else if (inst[3:0] == 4'd75) begin 
reg1 <= {data[74:0], data[DIM:75]};
end
else if (inst[3:0] == 4'd76) begin 
reg1 <= {data[75:0], data[DIM:76]};
end
else if (inst[3:0] == 4'd77) begin 
reg1 <= {data[76:0], data[DIM:77]};
end
else if (inst[3:0] == 4'd78) begin 
reg1 <= {data[77:0], data[DIM:78]};
end
else if (inst[3:0] == 4'd79) begin 
reg1 <= {data[78:0], data[DIM:79]};
end
else if (inst[3:0] == 4'd80) begin 
reg1 <= {data[79:0], data[DIM:80]};
end
else if (inst[3:0] == 4'd81) begin 
reg1 <= {data[80:0], data[DIM:81]};
end
else if (inst[3:0] == 4'd82) begin 
reg1 <= {data[81:0], data[DIM:82]};
end
else if (inst[3:0] == 4'd83) begin 
reg1 <= {data[82:0], data[DIM:83]};
end
else if (inst[3:0] == 4'd84) begin 
reg1 <= {data[83:0], data[DIM:84]};
end
else if (inst[3:0] == 4'd85) begin 
reg1 <= {data[84:0], data[DIM:85]};
end
else if (inst[3:0] == 4'd86) begin 
reg1 <= {data[85:0], data[DIM:86]};
end
else if (inst[3:0] == 4'd87) begin 
reg1 <= {data[86:0], data[DIM:87]};
end
else if (inst[3:0] == 4'd88) begin 
reg1 <= {data[87:0], data[DIM:88]};
end
else if (inst[3:0] == 4'd89) begin 
reg1 <= {data[88:0], data[DIM:89]};
end
else if (inst[3:0] == 4'd90) begin 
reg1 <= {data[89:0], data[DIM:90]};
end
else if (inst[3:0] == 4'd91) begin 
reg1 <= {data[90:0], data[DIM:91]};
end
else if (inst[3:0] == 4'd92) begin 
reg1 <= {data[91:0], data[DIM:92]};
end
else if (inst[3:0] == 4'd93) begin 
reg1 <= {data[92:0], data[DIM:93]};
end
else if (inst[3:0] == 4'd94) begin 
reg1 <= {data[93:0], data[DIM:94]};
end
else if (inst[3:0] == 4'd95) begin 
reg1 <= {data[94:0], data[DIM:95]};
end
else if (inst[3:0] == 4'd96) begin 
reg1 <= {data[95:0], data[DIM:96]};
end
else if (inst[3:0] == 4'd97) begin 
reg1 <= {data[96:0], data[DIM:97]};
end
else if (inst[3:0] == 4'd98) begin 
reg1 <= {data[97:0], data[DIM:98]};
end
else if (inst[3:0] == 4'd99) begin 
reg1 <= {data[98:0], data[DIM:99]};
end
else if (inst[3:0] == 4'd100) begin 
reg1 <= {data[99:0], data[DIM:100]};
end
else if (inst[3:0] == 4'd101) begin 
reg1 <= {data[100:0], data[DIM:101]};
end
else if (inst[3:0] == 4'd102) begin 
reg1 <= {data[101:0], data[DIM:102]};
end
else if (inst[3:0] == 4'd103) begin 
reg1 <= {data[102:0], data[DIM:103]};
end
else if (inst[3:0] == 4'd104) begin 
reg1 <= {data[103:0], data[DIM:104]};
end
else if (inst[3:0] == 4'd105) begin 
reg1 <= {data[104:0], data[DIM:105]};
end
else if (inst[3:0] == 4'd106) begin 
reg1 <= {data[105:0], data[DIM:106]};
end
else if (inst[3:0] == 4'd107) begin 
reg1 <= {data[106:0], data[DIM:107]};
end
else if (inst[3:0] == 4'd108) begin 
reg1 <= {data[107:0], data[DIM:108]};
end
else if (inst[3:0] == 4'd109) begin 
reg1 <= {data[108:0], data[DIM:109]};
end
else if (inst[3:0] == 4'd110) begin 
reg1 <= {data[109:0], data[DIM:110]};
end
else if (inst[3:0] == 4'd111) begin 
reg1 <= {data[110:0], data[DIM:111]};
end
else if (inst[3:0] == 4'd112) begin 
reg1 <= {data[111:0], data[DIM:112]};
end
else if (inst[3:0] == 4'd113) begin 
reg1 <= {data[112:0], data[DIM:113]};
end
else if (inst[3:0] == 4'd114) begin 
reg1 <= {data[113:0], data[DIM:114]};
end
else if (inst[3:0] == 4'd115) begin 
reg1 <= {data[114:0], data[DIM:115]};
end
else if (inst[3:0] == 4'd116) begin 
reg1 <= {data[115:0], data[DIM:116]};
end
else if (inst[3:0] == 4'd117) begin 
reg1 <= {data[116:0], data[DIM:117]};
end
else if (inst[3:0] == 4'd118) begin 
reg1 <= {data[117:0], data[DIM:118]};
end
else if (inst[3:0] == 4'd119) begin 
reg1 <= {data[118:0], data[DIM:119]};
end
else if (inst[3:0] == 4'd120) begin 
reg1 <= {data[119:0], data[DIM:120]};
end
else if (inst[3:0] == 4'd121) begin 
reg1 <= {data[120:0], data[DIM:121]};
end
else if (inst[3:0] == 4'd122) begin 
reg1 <= {data[121:0], data[DIM:122]};
end
else if (inst[3:0] == 4'd123) begin 
reg1 <= {data[122:0], data[DIM:123]};
end
else if (inst[3:0] == 4'd124) begin 
reg1 <= {data[123:0], data[DIM:124]};
end
else if (inst[3:0] == 4'd125) begin 
reg1 <= {data[124:0], data[DIM:125]};
end
else if (inst[3:0] == 4'd126) begin 
reg1 <= {data[125:0], data[DIM:126]};
end
else if (inst[3:0] == 4'd127) begin 
reg1 <= {data[126:0], data[DIM:127]};
end
else if (inst[3:0] == 4'd128) begin 
reg1 <= {data[127:0], data[DIM:128]};
end
else if (inst[3:0] == 4'd129) begin 
reg1 <= {data[128:0], data[DIM:129]};
end
else if (inst[3:0] == 4'd130) begin 
reg1 <= {data[129:0], data[DIM:130]};
end
else if (inst[3:0] == 4'd131) begin 
reg1 <= {data[130:0], data[DIM:131]};
end
else if (inst[3:0] == 4'd132) begin 
reg1 <= {data[131:0], data[DIM:132]};
end
else if (inst[3:0] == 4'd133) begin 
reg1 <= {data[132:0], data[DIM:133]};
end
else if (inst[3:0] == 4'd134) begin 
reg1 <= {data[133:0], data[DIM:134]};
end
else if (inst[3:0] == 4'd135) begin 
reg1 <= {data[134:0], data[DIM:135]};
end
else if (inst[3:0] == 4'd136) begin 
reg1 <= {data[135:0], data[DIM:136]};
end
else if (inst[3:0] == 4'd137) begin 
reg1 <= {data[136:0], data[DIM:137]};
end
else if (inst[3:0] == 4'd138) begin 
reg1 <= {data[137:0], data[DIM:138]};
end
else if (inst[3:0] == 4'd139) begin 
reg1 <= {data[138:0], data[DIM:139]};
end
else if (inst[3:0] == 4'd140) begin 
reg1 <= {data[139:0], data[DIM:140]};
end
else if (inst[3:0] == 4'd141) begin 
reg1 <= {data[140:0], data[DIM:141]};
end
else if (inst[3:0] == 4'd142) begin 
reg1 <= {data[141:0], data[DIM:142]};
end
else if (inst[3:0] == 4'd143) begin 
reg1 <= {data[142:0], data[DIM:143]};
end
else if (inst[3:0] == 4'd144) begin 
reg1 <= {data[143:0], data[DIM:144]};
end
else if (inst[3:0] == 4'd145) begin 
reg1 <= {data[144:0], data[DIM:145]};
end
else if (inst[3:0] == 4'd146) begin 
reg1 <= {data[145:0], data[DIM:146]};
end
else if (inst[3:0] == 4'd147) begin 
reg1 <= {data[146:0], data[DIM:147]};
end
else if (inst[3:0] == 4'd148) begin 
reg1 <= {data[147:0], data[DIM:148]};
end
else if (inst[3:0] == 4'd149) begin 
reg1 <= {data[148:0], data[DIM:149]};
end
else if (inst[3:0] == 4'd150) begin 
reg1 <= {data[149:0], data[DIM:150]};
end
else if (inst[3:0] == 4'd151) begin 
reg1 <= {data[150:0], data[DIM:151]};
end
else if (inst[3:0] == 4'd152) begin 
reg1 <= {data[151:0], data[DIM:152]};
end
else if (inst[3:0] == 4'd153) begin 
reg1 <= {data[152:0], data[DIM:153]};
end
else if (inst[3:0] == 4'd154) begin 
reg1 <= {data[153:0], data[DIM:154]};
end
else if (inst[3:0] == 4'd155) begin 
reg1 <= {data[154:0], data[DIM:155]};
end
else if (inst[3:0] == 4'd156) begin 
reg1 <= {data[155:0], data[DIM:156]};
end
else if (inst[3:0] == 4'd157) begin 
reg1 <= {data[156:0], data[DIM:157]};
end
else if (inst[3:0] == 4'd158) begin 
reg1 <= {data[157:0], data[DIM:158]};
end
else if (inst[3:0] == 4'd159) begin 
reg1 <= {data[158:0], data[DIM:159]};
end
else if (inst[3:0] == 4'd160) begin 
reg1 <= {data[159:0], data[DIM:160]};
end
else if (inst[3:0] == 4'd161) begin 
reg1 <= {data[160:0], data[DIM:161]};
end
else if (inst[3:0] == 4'd162) begin 
reg1 <= {data[161:0], data[DIM:162]};
end
else if (inst[3:0] == 4'd163) begin 
reg1 <= {data[162:0], data[DIM:163]};
end
else if (inst[3:0] == 4'd164) begin 
reg1 <= {data[163:0], data[DIM:164]};
end
else if (inst[3:0] == 4'd165) begin 
reg1 <= {data[164:0], data[DIM:165]};
end
else if (inst[3:0] == 4'd166) begin 
reg1 <= {data[165:0], data[DIM:166]};
end
else if (inst[3:0] == 4'd167) begin 
reg1 <= {data[166:0], data[DIM:167]};
end
else if (inst[3:0] == 4'd168) begin 
reg1 <= {data[167:0], data[DIM:168]};
end
else if (inst[3:0] == 4'd169) begin 
reg1 <= {data[168:0], data[DIM:169]};
end
else if (inst[3:0] == 4'd170) begin 
reg1 <= {data[169:0], data[DIM:170]};
end
else if (inst[3:0] == 4'd171) begin 
reg1 <= {data[170:0], data[DIM:171]};
end
else if (inst[3:0] == 4'd172) begin 
reg1 <= {data[171:0], data[DIM:172]};
end
else if (inst[3:0] == 4'd173) begin 
reg1 <= {data[172:0], data[DIM:173]};
end
else if (inst[3:0] == 4'd174) begin 
reg1 <= {data[173:0], data[DIM:174]};
end
else if (inst[3:0] == 4'd175) begin 
reg1 <= {data[174:0], data[DIM:175]};
end
else if (inst[3:0] == 4'd176) begin 
reg1 <= {data[175:0], data[DIM:176]};
end
else if (inst[3:0] == 4'd177) begin 
reg1 <= {data[176:0], data[DIM:177]};
end
else if (inst[3:0] == 4'd178) begin 
reg1 <= {data[177:0], data[DIM:178]};
end
else if (inst[3:0] == 4'd179) begin 
reg1 <= {data[178:0], data[DIM:179]};
end
else if (inst[3:0] == 4'd180) begin 
reg1 <= {data[179:0], data[DIM:180]};
end
else if (inst[3:0] == 4'd181) begin 
reg1 <= {data[180:0], data[DIM:181]};
end
else if (inst[3:0] == 4'd182) begin 
reg1 <= {data[181:0], data[DIM:182]};
end
else if (inst[3:0] == 4'd183) begin 
reg1 <= {data[182:0], data[DIM:183]};
end
else if (inst[3:0] == 4'd184) begin 
reg1 <= {data[183:0], data[DIM:184]};
end
else if (inst[3:0] == 4'd185) begin 
reg1 <= {data[184:0], data[DIM:185]};
end
else if (inst[3:0] == 4'd186) begin 
reg1 <= {data[185:0], data[DIM:186]};
end
else if (inst[3:0] == 4'd187) begin 
reg1 <= {data[186:0], data[DIM:187]};
end
else if (inst[3:0] == 4'd188) begin 
reg1 <= {data[187:0], data[DIM:188]};
end
else if (inst[3:0] == 4'd189) begin 
reg1 <= {data[188:0], data[DIM:189]};
end
else if (inst[3:0] == 4'd190) begin 
reg1 <= {data[189:0], data[DIM:190]};
end
else if (inst[3:0] == 4'd191) begin 
reg1 <= {data[190:0], data[DIM:191]};
end
else if (inst[3:0] == 4'd192) begin 
reg1 <= {data[191:0], data[DIM:192]};
end
else if (inst[3:0] == 4'd193) begin 
reg1 <= {data[192:0], data[DIM:193]};
end
else if (inst[3:0] == 4'd194) begin 
reg1 <= {data[193:0], data[DIM:194]};
end
else if (inst[3:0] == 4'd195) begin 
reg1 <= {data[194:0], data[DIM:195]};
end
else if (inst[3:0] == 4'd196) begin 
reg1 <= {data[195:0], data[DIM:196]};
end
else if (inst[3:0] == 4'd197) begin 
reg1 <= {data[196:0], data[DIM:197]};
end
else if (inst[3:0] == 4'd198) begin 
reg1 <= {data[197:0], data[DIM:198]};
end
else if (inst[3:0] == 4'd199) begin 
reg1 <= {data[198:0], data[DIM:199]};
end
else if (inst[3:0] == 4'd200) begin 
reg1 <= {data[199:0], data[DIM:200]};
end
else if (inst[3:0] == 4'd201) begin 
reg1 <= {data[200:0], data[DIM:201]};
end
else if (inst[3:0] == 4'd202) begin 
reg1 <= {data[201:0], data[DIM:202]};
end
else if (inst[3:0] == 4'd203) begin 
reg1 <= {data[202:0], data[DIM:203]};
end
else if (inst[3:0] == 4'd204) begin 
reg1 <= {data[203:0], data[DIM:204]};
end
else if (inst[3:0] == 4'd205) begin 
reg1 <= {data[204:0], data[DIM:205]};
end
else if (inst[3:0] == 4'd206) begin 
reg1 <= {data[205:0], data[DIM:206]};
end
else if (inst[3:0] == 4'd207) begin 
reg1 <= {data[206:0], data[DIM:207]};
end
else if (inst[3:0] == 4'd208) begin 
reg1 <= {data[207:0], data[DIM:208]};
end
else if (inst[3:0] == 4'd209) begin 
reg1 <= {data[208:0], data[DIM:209]};
end
else if (inst[3:0] == 4'd210) begin 
reg1 <= {data[209:0], data[DIM:210]};
end
else if (inst[3:0] == 4'd211) begin 
reg1 <= {data[210:0], data[DIM:211]};
end
else if (inst[3:0] == 4'd212) begin 
reg1 <= {data[211:0], data[DIM:212]};
end
else if (inst[3:0] == 4'd213) begin 
reg1 <= {data[212:0], data[DIM:213]};
end
else if (inst[3:0] == 4'd214) begin 
reg1 <= {data[213:0], data[DIM:214]};
end
else if (inst[3:0] == 4'd215) begin 
reg1 <= {data[214:0], data[DIM:215]};
end
else if (inst[3:0] == 4'd216) begin 
reg1 <= {data[215:0], data[DIM:216]};
end
else if (inst[3:0] == 4'd217) begin 
reg1 <= {data[216:0], data[DIM:217]};
end
else if (inst[3:0] == 4'd218) begin 
reg1 <= {data[217:0], data[DIM:218]};
end
else if (inst[3:0] == 4'd219) begin 
reg1 <= {data[218:0], data[DIM:219]};
end
else if (inst[3:0] == 4'd220) begin 
reg1 <= {data[219:0], data[DIM:220]};
end
else if (inst[3:0] == 4'd221) begin 
reg1 <= {data[220:0], data[DIM:221]};
end
else if (inst[3:0] == 4'd222) begin 
reg1 <= {data[221:0], data[DIM:222]};
end
else if (inst[3:0] == 4'd223) begin 
reg1 <= {data[222:0], data[DIM:223]};
end
else if (inst[3:0] == 4'd224) begin 
reg1 <= {data[223:0], data[DIM:224]};
end
else if (inst[3:0] == 4'd225) begin 
reg1 <= {data[224:0], data[DIM:225]};
end
else if (inst[3:0] == 4'd226) begin 
reg1 <= {data[225:0], data[DIM:226]};
end
else if (inst[3:0] == 4'd227) begin 
reg1 <= {data[226:0], data[DIM:227]};
end
else if (inst[3:0] == 4'd228) begin 
reg1 <= {data[227:0], data[DIM:228]};
end
else if (inst[3:0] == 4'd229) begin 
reg1 <= {data[228:0], data[DIM:229]};
end
else if (inst[3:0] == 4'd230) begin 
reg1 <= {data[229:0], data[DIM:230]};
end
else if (inst[3:0] == 4'd231) begin 
reg1 <= {data[230:0], data[DIM:231]};
end
else if (inst[3:0] == 4'd232) begin 
reg1 <= {data[231:0], data[DIM:232]};
end
else if (inst[3:0] == 4'd233) begin 
reg1 <= {data[232:0], data[DIM:233]};
end
else if (inst[3:0] == 4'd234) begin 
reg1 <= {data[233:0], data[DIM:234]};
end
else if (inst[3:0] == 4'd235) begin 
reg1 <= {data[234:0], data[DIM:235]};
end
else if (inst[3:0] == 4'd236) begin 
reg1 <= {data[235:0], data[DIM:236]};
end
else if (inst[3:0] == 4'd237) begin 
reg1 <= {data[236:0], data[DIM:237]};
end
else if (inst[3:0] == 4'd238) begin 
reg1 <= {data[237:0], data[DIM:238]};
end
else if (inst[3:0] == 4'd239) begin 
reg1 <= {data[238:0], data[DIM:239]};
end
else if (inst[3:0] == 4'd240) begin 
reg1 <= {data[239:0], data[DIM:240]};
end
else if (inst[3:0] == 4'd241) begin 
reg1 <= {data[240:0], data[DIM:241]};
end
else if (inst[3:0] == 4'd242) begin 
reg1 <= {data[241:0], data[DIM:242]};
end
else if (inst[3:0] == 4'd243) begin 
reg1 <= {data[242:0], data[DIM:243]};
end
else if (inst[3:0] == 4'd244) begin 
reg1 <= {data[243:0], data[DIM:244]};
end
else if (inst[3:0] == 4'd245) begin 
reg1 <= {data[244:0], data[DIM:245]};
end
else if (inst[3:0] == 4'd246) begin 
reg1 <= {data[245:0], data[DIM:246]};
end
else if (inst[3:0] == 4'd247) begin 
reg1 <= {data[246:0], data[DIM:247]};
end
else if (inst[3:0] == 4'd248) begin 
reg1 <= {data[247:0], data[DIM:248]};
end
else if (inst[3:0] == 4'd249) begin 
reg1 <= {data[248:0], data[DIM:249]};
end
else if (inst[3:0] == 4'd250) begin 
reg1 <= {data[249:0], data[DIM:250]};
end
else if (inst[3:0] == 4'd251) begin 
reg1 <= {data[250:0], data[DIM:251]};
end
else if (inst[3:0] == 4'd252) begin 
reg1 <= {data[251:0], data[DIM:252]};
end
else if (inst[3:0] == 4'd253) begin 
reg1 <= {data[252:0], data[DIM:253]};
end
else if (inst[3:0] == 4'd254) begin 
reg1 <= {data[253:0], data[DIM:254]};
end
else if (inst[3:0] == 4'd255) begin 
reg1 <= {data[254:0], data[DIM:255]};
end
else if (inst[3:0] == 4'd256) begin 
reg1 <= {data[255:0], data[DIM:256]};
end
else if (inst[3:0] == 4'd257) begin 
reg1 <= {data[256:0], data[DIM:257]};
end
else if (inst[3:0] == 4'd258) begin 
reg1 <= {data[257:0], data[DIM:258]};
end
else if (inst[3:0] == 4'd259) begin 
reg1 <= {data[258:0], data[DIM:259]};
end
else if (inst[3:0] == 4'd260) begin 
reg1 <= {data[259:0], data[DIM:260]};
end
else if (inst[3:0] == 4'd261) begin 
reg1 <= {data[260:0], data[DIM:261]};
end
else if (inst[3:0] == 4'd262) begin 
reg1 <= {data[261:0], data[DIM:262]};
end
else if (inst[3:0] == 4'd263) begin 
reg1 <= {data[262:0], data[DIM:263]};
end
else if (inst[3:0] == 4'd264) begin 
reg1 <= {data[263:0], data[DIM:264]};
end
else if (inst[3:0] == 4'd265) begin 
reg1 <= {data[264:0], data[DIM:265]};
end
else if (inst[3:0] == 4'd266) begin 
reg1 <= {data[265:0], data[DIM:266]};
end
else if (inst[3:0] == 4'd267) begin 
reg1 <= {data[266:0], data[DIM:267]};
end
else if (inst[3:0] == 4'd268) begin 
reg1 <= {data[267:0], data[DIM:268]};
end
else if (inst[3:0] == 4'd269) begin 
reg1 <= {data[268:0], data[DIM:269]};
end
else if (inst[3:0] == 4'd270) begin 
reg1 <= {data[269:0], data[DIM:270]};
end
else if (inst[3:0] == 4'd271) begin 
reg1 <= {data[270:0], data[DIM:271]};
end
else if (inst[3:0] == 4'd272) begin 
reg1 <= {data[271:0], data[DIM:272]};
end
else if (inst[3:0] == 4'd273) begin 
reg1 <= {data[272:0], data[DIM:273]};
end
else if (inst[3:0] == 4'd274) begin 
reg1 <= {data[273:0], data[DIM:274]};
end
else if (inst[3:0] == 4'd275) begin 
reg1 <= {data[274:0], data[DIM:275]};
end
else if (inst[3:0] == 4'd276) begin 
reg1 <= {data[275:0], data[DIM:276]};
end
else if (inst[3:0] == 4'd277) begin 
reg1 <= {data[276:0], data[DIM:277]};
end
else if (inst[3:0] == 4'd278) begin 
reg1 <= {data[277:0], data[DIM:278]};
end
else if (inst[3:0] == 4'd279) begin 
reg1 <= {data[278:0], data[DIM:279]};
end
else if (inst[3:0] == 4'd280) begin 
reg1 <= {data[279:0], data[DIM:280]};
end
else if (inst[3:0] == 4'd281) begin 
reg1 <= {data[280:0], data[DIM:281]};
end
else if (inst[3:0] == 4'd282) begin 
reg1 <= {data[281:0], data[DIM:282]};
end
else if (inst[3:0] == 4'd283) begin 
reg1 <= {data[282:0], data[DIM:283]};
end
else if (inst[3:0] == 4'd284) begin 
reg1 <= {data[283:0], data[DIM:284]};
end
else if (inst[3:0] == 4'd285) begin 
reg1 <= {data[284:0], data[DIM:285]};
end
else if (inst[3:0] == 4'd286) begin 
reg1 <= {data[285:0], data[DIM:286]};
end
else if (inst[3:0] == 4'd287) begin 
reg1 <= {data[286:0], data[DIM:287]};
end
else if (inst[3:0] == 4'd288) begin 
reg1 <= {data[287:0], data[DIM:288]};
end
else if (inst[3:0] == 4'd289) begin 
reg1 <= {data[288:0], data[DIM:289]};
end
else if (inst[3:0] == 4'd290) begin 
reg1 <= {data[289:0], data[DIM:290]};
end
else if (inst[3:0] == 4'd291) begin 
reg1 <= {data[290:0], data[DIM:291]};
end
else if (inst[3:0] == 4'd292) begin 
reg1 <= {data[291:0], data[DIM:292]};
end
else if (inst[3:0] == 4'd293) begin 
reg1 <= {data[292:0], data[DIM:293]};
end
else if (inst[3:0] == 4'd294) begin 
reg1 <= {data[293:0], data[DIM:294]};
end
else if (inst[3:0] == 4'd295) begin 
reg1 <= {data[294:0], data[DIM:295]};
end
else if (inst[3:0] == 4'd296) begin 
reg1 <= {data[295:0], data[DIM:296]};
end
else if (inst[3:0] == 4'd297) begin 
reg1 <= {data[296:0], data[DIM:297]};
end
else if (inst[3:0] == 4'd298) begin 
reg1 <= {data[297:0], data[DIM:298]};
end
else if (inst[3:0] == 4'd299) begin 
reg1 <= {data[298:0], data[DIM:299]};
end
else if (inst[3:0] == 4'd300) begin 
reg1 <= {data[299:0], data[DIM:300]};
end
else if (inst[3:0] == 4'd301) begin 
reg1 <= {data[300:0], data[DIM:301]};
end
else if (inst[3:0] == 4'd302) begin 
reg1 <= {data[301:0], data[DIM:302]};
end
else if (inst[3:0] == 4'd303) begin 
reg1 <= {data[302:0], data[DIM:303]};
end
else if (inst[3:0] == 4'd304) begin 
reg1 <= {data[303:0], data[DIM:304]};
end
else if (inst[3:0] == 4'd305) begin 
reg1 <= {data[304:0], data[DIM:305]};
end
else if (inst[3:0] == 4'd306) begin 
reg1 <= {data[305:0], data[DIM:306]};
end
else if (inst[3:0] == 4'd307) begin 
reg1 <= {data[306:0], data[DIM:307]};
end
else if (inst[3:0] == 4'd308) begin 
reg1 <= {data[307:0], data[DIM:308]};
end
else if (inst[3:0] == 4'd309) begin 
reg1 <= {data[308:0], data[DIM:309]};
end
else if (inst[3:0] == 4'd310) begin 
reg1 <= {data[309:0], data[DIM:310]};
end
else if (inst[3:0] == 4'd311) begin 
reg1 <= {data[310:0], data[DIM:311]};
end
else if (inst[3:0] == 4'd312) begin 
reg1 <= {data[311:0], data[DIM:312]};
end
else if (inst[3:0] == 4'd313) begin 
reg1 <= {data[312:0], data[DIM:313]};
end
else if (inst[3:0] == 4'd314) begin 
reg1 <= {data[313:0], data[DIM:314]};
end
else if (inst[3:0] == 4'd315) begin 
reg1 <= {data[314:0], data[DIM:315]};
end
else if (inst[3:0] == 4'd316) begin 
reg1 <= {data[315:0], data[DIM:316]};
end
else if (inst[3:0] == 4'd317) begin 
reg1 <= {data[316:0], data[DIM:317]};
end
else if (inst[3:0] == 4'd318) begin 
reg1 <= {data[317:0], data[DIM:318]};
end
else if (inst[3:0] == 4'd319) begin 
reg1 <= {data[318:0], data[DIM:319]};
end
else if (inst[3:0] == 4'd320) begin 
reg1 <= {data[319:0], data[DIM:320]};
end
else if (inst[3:0] == 4'd321) begin 
reg1 <= {data[320:0], data[DIM:321]};
end
else if (inst[3:0] == 4'd322) begin 
reg1 <= {data[321:0], data[DIM:322]};
end
else if (inst[3:0] == 4'd323) begin 
reg1 <= {data[322:0], data[DIM:323]};
end
else if (inst[3:0] == 4'd324) begin 
reg1 <= {data[323:0], data[DIM:324]};
end
else if (inst[3:0] == 4'd325) begin 
reg1 <= {data[324:0], data[DIM:325]};
end
else if (inst[3:0] == 4'd326) begin 
reg1 <= {data[325:0], data[DIM:326]};
end
else if (inst[3:0] == 4'd327) begin 
reg1 <= {data[326:0], data[DIM:327]};
end
else if (inst[3:0] == 4'd328) begin 
reg1 <= {data[327:0], data[DIM:328]};
end
else if (inst[3:0] == 4'd329) begin 
reg1 <= {data[328:0], data[DIM:329]};
end
else if (inst[3:0] == 4'd330) begin 
reg1 <= {data[329:0], data[DIM:330]};
end
else if (inst[3:0] == 4'd331) begin 
reg1 <= {data[330:0], data[DIM:331]};
end
else if (inst[3:0] == 4'd332) begin 
reg1 <= {data[331:0], data[DIM:332]};
end
else if (inst[3:0] == 4'd333) begin 
reg1 <= {data[332:0], data[DIM:333]};
end
else if (inst[3:0] == 4'd334) begin 
reg1 <= {data[333:0], data[DIM:334]};
end
else if (inst[3:0] == 4'd335) begin 
reg1 <= {data[334:0], data[DIM:335]};
end
else if (inst[3:0] == 4'd336) begin 
reg1 <= {data[335:0], data[DIM:336]};
end
else if (inst[3:0] == 4'd337) begin 
reg1 <= {data[336:0], data[DIM:337]};
end
else if (inst[3:0] == 4'd338) begin 
reg1 <= {data[337:0], data[DIM:338]};
end
else if (inst[3:0] == 4'd339) begin 
reg1 <= {data[338:0], data[DIM:339]};
end
else if (inst[3:0] == 4'd340) begin 
reg1 <= {data[339:0], data[DIM:340]};
end
else if (inst[3:0] == 4'd341) begin 
reg1 <= {data[340:0], data[DIM:341]};
end
else if (inst[3:0] == 4'd342) begin 
reg1 <= {data[341:0], data[DIM:342]};
end
else if (inst[3:0] == 4'd343) begin 
reg1 <= {data[342:0], data[DIM:343]};
end
else if (inst[3:0] == 4'd344) begin 
reg1 <= {data[343:0], data[DIM:344]};
end
else if (inst[3:0] == 4'd345) begin 
reg1 <= {data[344:0], data[DIM:345]};
end
else if (inst[3:0] == 4'd346) begin 
reg1 <= {data[345:0], data[DIM:346]};
end
else if (inst[3:0] == 4'd347) begin 
reg1 <= {data[346:0], data[DIM:347]};
end
else if (inst[3:0] == 4'd348) begin 
reg1 <= {data[347:0], data[DIM:348]};
end
else if (inst[3:0] == 4'd349) begin 
reg1 <= {data[348:0], data[DIM:349]};
end
else if (inst[3:0] == 4'd350) begin 
reg1 <= {data[349:0], data[DIM:350]};
end
else if (inst[3:0] == 4'd351) begin 
reg1 <= {data[350:0], data[DIM:351]};
end
else if (inst[3:0] == 4'd352) begin 
reg1 <= {data[351:0], data[DIM:352]};
end
else if (inst[3:0] == 4'd353) begin 
reg1 <= {data[352:0], data[DIM:353]};
end
else if (inst[3:0] == 4'd354) begin 
reg1 <= {data[353:0], data[DIM:354]};
end
else if (inst[3:0] == 4'd355) begin 
reg1 <= {data[354:0], data[DIM:355]};
end
else if (inst[3:0] == 4'd356) begin 
reg1 <= {data[355:0], data[DIM:356]};
end
else if (inst[3:0] == 4'd357) begin 
reg1 <= {data[356:0], data[DIM:357]};
end
else if (inst[3:0] == 4'd358) begin 
reg1 <= {data[357:0], data[DIM:358]};
end
else if (inst[3:0] == 4'd359) begin 
reg1 <= {data[358:0], data[DIM:359]};
end
else if (inst[3:0] == 4'd360) begin 
reg1 <= {data[359:0], data[DIM:360]};
end
else if (inst[3:0] == 4'd361) begin 
reg1 <= {data[360:0], data[DIM:361]};
end
else if (inst[3:0] == 4'd362) begin 
reg1 <= {data[361:0], data[DIM:362]};
end
else if (inst[3:0] == 4'd363) begin 
reg1 <= {data[362:0], data[DIM:363]};
end
else if (inst[3:0] == 4'd364) begin 
reg1 <= {data[363:0], data[DIM:364]};
end
else if (inst[3:0] == 4'd365) begin 
reg1 <= {data[364:0], data[DIM:365]};
end
else if (inst[3:0] == 4'd366) begin 
reg1 <= {data[365:0], data[DIM:366]};
end
else if (inst[3:0] == 4'd367) begin 
reg1 <= {data[366:0], data[DIM:367]};
end
else if (inst[3:0] == 4'd368) begin 
reg1 <= {data[367:0], data[DIM:368]};
end
else if (inst[3:0] == 4'd369) begin 
reg1 <= {data[368:0], data[DIM:369]};
end
else if (inst[3:0] == 4'd370) begin 
reg1 <= {data[369:0], data[DIM:370]};
end
else if (inst[3:0] == 4'd371) begin 
reg1 <= {data[370:0], data[DIM:371]};
end
else if (inst[3:0] == 4'd372) begin 
reg1 <= {data[371:0], data[DIM:372]};
end
else if (inst[3:0] == 4'd373) begin 
reg1 <= {data[372:0], data[DIM:373]};
end
else if (inst[3:0] == 4'd374) begin 
reg1 <= {data[373:0], data[DIM:374]};
end
else if (inst[3:0] == 4'd375) begin 
reg1 <= {data[374:0], data[DIM:375]};
end
else if (inst[3:0] == 4'd376) begin 
reg1 <= {data[375:0], data[DIM:376]};
end
else if (inst[3:0] == 4'd377) begin 
reg1 <= {data[376:0], data[DIM:377]};
end
else if (inst[3:0] == 4'd378) begin 
reg1 <= {data[377:0], data[DIM:378]};
end
else if (inst[3:0] == 4'd379) begin 
reg1 <= {data[378:0], data[DIM:379]};
end
else if (inst[3:0] == 4'd380) begin 
reg1 <= {data[379:0], data[DIM:380]};
end
else if (inst[3:0] == 4'd381) begin 
reg1 <= {data[380:0], data[DIM:381]};
end
else if (inst[3:0] == 4'd382) begin 
reg1 <= {data[381:0], data[DIM:382]};
end
else if (inst[3:0] == 4'd383) begin 
reg1 <= {data[382:0], data[DIM:383]};
end
else if (inst[3:0] == 4'd384) begin 
reg1 <= {data[383:0], data[DIM:384]};
end
else if (inst[3:0] == 4'd385) begin 
reg1 <= {data[384:0], data[DIM:385]};
end
else if (inst[3:0] == 4'd386) begin 
reg1 <= {data[385:0], data[DIM:386]};
end
else if (inst[3:0] == 4'd387) begin 
reg1 <= {data[386:0], data[DIM:387]};
end
else if (inst[3:0] == 4'd388) begin 
reg1 <= {data[387:0], data[DIM:388]};
end
else if (inst[3:0] == 4'd389) begin 
reg1 <= {data[388:0], data[DIM:389]};
end
else if (inst[3:0] == 4'd390) begin 
reg1 <= {data[389:0], data[DIM:390]};
end
else if (inst[3:0] == 4'd391) begin 
reg1 <= {data[390:0], data[DIM:391]};
end
else if (inst[3:0] == 4'd392) begin 
reg1 <= {data[391:0], data[DIM:392]};
end
else if (inst[3:0] == 4'd393) begin 
reg1 <= {data[392:0], data[DIM:393]};
end
else if (inst[3:0] == 4'd394) begin 
reg1 <= {data[393:0], data[DIM:394]};
end
else if (inst[3:0] == 4'd395) begin 
reg1 <= {data[394:0], data[DIM:395]};
end
else if (inst[3:0] == 4'd396) begin 
reg1 <= {data[395:0], data[DIM:396]};
end
else if (inst[3:0] == 4'd397) begin 
reg1 <= {data[396:0], data[DIM:397]};
end
else if (inst[3:0] == 4'd398) begin 
reg1 <= {data[397:0], data[DIM:398]};
end
else if (inst[3:0] == 4'd399) begin 
reg1 <= {data[398:0], data[DIM:399]};
end
else if (inst[3:0] == 4'd400) begin 
reg1 <= {data[399:0], data[DIM:400]};
end
else if (inst[3:0] == 4'd401) begin 
reg1 <= {data[400:0], data[DIM:401]};
end
else if (inst[3:0] == 4'd402) begin 
reg1 <= {data[401:0], data[DIM:402]};
end
else if (inst[3:0] == 4'd403) begin 
reg1 <= {data[402:0], data[DIM:403]};
end
else if (inst[3:0] == 4'd404) begin 
reg1 <= {data[403:0], data[DIM:404]};
end
else if (inst[3:0] == 4'd405) begin 
reg1 <= {data[404:0], data[DIM:405]};
end
else if (inst[3:0] == 4'd406) begin 
reg1 <= {data[405:0], data[DIM:406]};
end
else if (inst[3:0] == 4'd407) begin 
reg1 <= {data[406:0], data[DIM:407]};
end
else if (inst[3:0] == 4'd408) begin 
reg1 <= {data[407:0], data[DIM:408]};
end
else if (inst[3:0] == 4'd409) begin 
reg1 <= {data[408:0], data[DIM:409]};
end
else if (inst[3:0] == 4'd410) begin 
reg1 <= {data[409:0], data[DIM:410]};
end
else if (inst[3:0] == 4'd411) begin 
reg1 <= {data[410:0], data[DIM:411]};
end
else if (inst[3:0] == 4'd412) begin 
reg1 <= {data[411:0], data[DIM:412]};
end
else if (inst[3:0] == 4'd413) begin 
reg1 <= {data[412:0], data[DIM:413]};
end
else if (inst[3:0] == 4'd414) begin 
reg1 <= {data[413:0], data[DIM:414]};
end
else if (inst[3:0] == 4'd415) begin 
reg1 <= {data[414:0], data[DIM:415]};
end
else if (inst[3:0] == 4'd416) begin 
reg1 <= {data[415:0], data[DIM:416]};
end
else if (inst[3:0] == 4'd417) begin 
reg1 <= {data[416:0], data[DIM:417]};
end
else if (inst[3:0] == 4'd418) begin 
reg1 <= {data[417:0], data[DIM:418]};
end
else if (inst[3:0] == 4'd419) begin 
reg1 <= {data[418:0], data[DIM:419]};
end
else if (inst[3:0] == 4'd420) begin 
reg1 <= {data[419:0], data[DIM:420]};
end
else if (inst[3:0] == 4'd421) begin 
reg1 <= {data[420:0], data[DIM:421]};
end
else if (inst[3:0] == 4'd422) begin 
reg1 <= {data[421:0], data[DIM:422]};
end
else if (inst[3:0] == 4'd423) begin 
reg1 <= {data[422:0], data[DIM:423]};
end
else if (inst[3:0] == 4'd424) begin 
reg1 <= {data[423:0], data[DIM:424]};
end
else if (inst[3:0] == 4'd425) begin 
reg1 <= {data[424:0], data[DIM:425]};
end
else if (inst[3:0] == 4'd426) begin 
reg1 <= {data[425:0], data[DIM:426]};
end
else if (inst[3:0] == 4'd427) begin 
reg1 <= {data[426:0], data[DIM:427]};
end
else if (inst[3:0] == 4'd428) begin 
reg1 <= {data[427:0], data[DIM:428]};
end
else if (inst[3:0] == 4'd429) begin 
reg1 <= {data[428:0], data[DIM:429]};
end
else if (inst[3:0] == 4'd430) begin 
reg1 <= {data[429:0], data[DIM:430]};
end
else if (inst[3:0] == 4'd431) begin 
reg1 <= {data[430:0], data[DIM:431]};
end
else if (inst[3:0] == 4'd432) begin 
reg1 <= {data[431:0], data[DIM:432]};
end
else if (inst[3:0] == 4'd433) begin 
reg1 <= {data[432:0], data[DIM:433]};
end
else if (inst[3:0] == 4'd434) begin 
reg1 <= {data[433:0], data[DIM:434]};
end
else if (inst[3:0] == 4'd435) begin 
reg1 <= {data[434:0], data[DIM:435]};
end
else if (inst[3:0] == 4'd436) begin 
reg1 <= {data[435:0], data[DIM:436]};
end
else if (inst[3:0] == 4'd437) begin 
reg1 <= {data[436:0], data[DIM:437]};
end
else if (inst[3:0] == 4'd438) begin 
reg1 <= {data[437:0], data[DIM:438]};
end
else if (inst[3:0] == 4'd439) begin 
reg1 <= {data[438:0], data[DIM:439]};
end
else if (inst[3:0] == 4'd440) begin 
reg1 <= {data[439:0], data[DIM:440]};
end
else if (inst[3:0] == 4'd441) begin 
reg1 <= {data[440:0], data[DIM:441]};
end
else if (inst[3:0] == 4'd442) begin 
reg1 <= {data[441:0], data[DIM:442]};
end
else if (inst[3:0] == 4'd443) begin 
reg1 <= {data[442:0], data[DIM:443]};
end
else if (inst[3:0] == 4'd444) begin 
reg1 <= {data[443:0], data[DIM:444]};
end
else if (inst[3:0] == 4'd445) begin 
reg1 <= {data[444:0], data[DIM:445]};
end
else if (inst[3:0] == 4'd446) begin 
reg1 <= {data[445:0], data[DIM:446]};
end
else if (inst[3:0] == 4'd447) begin 
reg1 <= {data[446:0], data[DIM:447]};
end
else if (inst[3:0] == 4'd448) begin 
reg1 <= {data[447:0], data[DIM:448]};
end
else if (inst[3:0] == 4'd449) begin 
reg1 <= {data[448:0], data[DIM:449]};
end
else if (inst[3:0] == 4'd450) begin 
reg1 <= {data[449:0], data[DIM:450]};
end
else if (inst[3:0] == 4'd451) begin 
reg1 <= {data[450:0], data[DIM:451]};
end
else if (inst[3:0] == 4'd452) begin 
reg1 <= {data[451:0], data[DIM:452]};
end
else if (inst[3:0] == 4'd453) begin 
reg1 <= {data[452:0], data[DIM:453]};
end
else if (inst[3:0] == 4'd454) begin 
reg1 <= {data[453:0], data[DIM:454]};
end
else if (inst[3:0] == 4'd455) begin 
reg1 <= {data[454:0], data[DIM:455]};
end
else if (inst[3:0] == 4'd456) begin 
reg1 <= {data[455:0], data[DIM:456]};
end
else if (inst[3:0] == 4'd457) begin 
reg1 <= {data[456:0], data[DIM:457]};
end
else if (inst[3:0] == 4'd458) begin 
reg1 <= {data[457:0], data[DIM:458]};
end
else if (inst[3:0] == 4'd459) begin 
reg1 <= {data[458:0], data[DIM:459]};
end
else if (inst[3:0] == 4'd460) begin 
reg1 <= {data[459:0], data[DIM:460]};
end
else if (inst[3:0] == 4'd461) begin 
reg1 <= {data[460:0], data[DIM:461]};
end
else if (inst[3:0] == 4'd462) begin 
reg1 <= {data[461:0], data[DIM:462]};
end
else if (inst[3:0] == 4'd463) begin 
reg1 <= {data[462:0], data[DIM:463]};
end
else if (inst[3:0] == 4'd464) begin 
reg1 <= {data[463:0], data[DIM:464]};
end
else if (inst[3:0] == 4'd465) begin 
reg1 <= {data[464:0], data[DIM:465]};
end
else if (inst[3:0] == 4'd466) begin 
reg1 <= {data[465:0], data[DIM:466]};
end
else if (inst[3:0] == 4'd467) begin 
reg1 <= {data[466:0], data[DIM:467]};
end
else if (inst[3:0] == 4'd468) begin 
reg1 <= {data[467:0], data[DIM:468]};
end
else if (inst[3:0] == 4'd469) begin 
reg1 <= {data[468:0], data[DIM:469]};
end
else if (inst[3:0] == 4'd470) begin 
reg1 <= {data[469:0], data[DIM:470]};
end
else if (inst[3:0] == 4'd471) begin 
reg1 <= {data[470:0], data[DIM:471]};
end
else if (inst[3:0] == 4'd472) begin 
reg1 <= {data[471:0], data[DIM:472]};
end
else if (inst[3:0] == 4'd473) begin 
reg1 <= {data[472:0], data[DIM:473]};
end
else if (inst[3:0] == 4'd474) begin 
reg1 <= {data[473:0], data[DIM:474]};
end
else if (inst[3:0] == 4'd475) begin 
reg1 <= {data[474:0], data[DIM:475]};
end
else if (inst[3:0] == 4'd476) begin 
reg1 <= {data[475:0], data[DIM:476]};
end
else if (inst[3:0] == 4'd477) begin 
reg1 <= {data[476:0], data[DIM:477]};
end
else if (inst[3:0] == 4'd478) begin 
reg1 <= {data[477:0], data[DIM:478]};
end
else if (inst[3:0] == 4'd479) begin 
reg1 <= {data[478:0], data[DIM:479]};
end
else if (inst[3:0] == 4'd480) begin 
reg1 <= {data[479:0], data[DIM:480]};
end
else if (inst[3:0] == 4'd481) begin 
reg1 <= {data[480:0], data[DIM:481]};
end
else if (inst[3:0] == 4'd482) begin 
reg1 <= {data[481:0], data[DIM:482]};
end
else if (inst[3:0] == 4'd483) begin 
reg1 <= {data[482:0], data[DIM:483]};
end
else if (inst[3:0] == 4'd484) begin 
reg1 <= {data[483:0], data[DIM:484]};
end
else if (inst[3:0] == 4'd485) begin 
reg1 <= {data[484:0], data[DIM:485]};
end
else if (inst[3:0] == 4'd486) begin 
reg1 <= {data[485:0], data[DIM:486]};
end
else if (inst[3:0] == 4'd487) begin 
reg1 <= {data[486:0], data[DIM:487]};
end
else if (inst[3:0] == 4'd488) begin 
reg1 <= {data[487:0], data[DIM:488]};
end
else if (inst[3:0] == 4'd489) begin 
reg1 <= {data[488:0], data[DIM:489]};
end
else if (inst[3:0] == 4'd490) begin 
reg1 <= {data[489:0], data[DIM:490]};
end
else if (inst[3:0] == 4'd491) begin 
reg1 <= {data[490:0], data[DIM:491]};
end
else if (inst[3:0] == 4'd492) begin 
reg1 <= {data[491:0], data[DIM:492]};
end
else if (inst[3:0] == 4'd493) begin 
reg1 <= {data[492:0], data[DIM:493]};
end
else if (inst[3:0] == 4'd494) begin 
reg1 <= {data[493:0], data[DIM:494]};
end
else if (inst[3:0] == 4'd495) begin 
reg1 <= {data[494:0], data[DIM:495]};
end
else if (inst[3:0] == 4'd496) begin 
reg1 <= {data[495:0], data[DIM:496]};
end
else if (inst[3:0] == 4'd497) begin 
reg1 <= {data[496:0], data[DIM:497]};
end
else if (inst[3:0] == 4'd498) begin 
reg1 <= {data[497:0], data[DIM:498]};
end
else if (inst[3:0] == 4'd499) begin 
reg1 <= {data[498:0], data[DIM:499]};
end
else if (inst[3:0] == 4'd500) begin 
reg1 <= {data[499:0], data[DIM:500]};
end
else if (inst[3:0] == 4'd501) begin 
reg1 <= {data[500:0], data[DIM:501]};
end
else if (inst[3:0] == 4'd502) begin 
reg1 <= {data[501:0], data[DIM:502]};
end
else if (inst[3:0] == 4'd503) begin 
reg1 <= {data[502:0], data[DIM:503]};
end
else if (inst[3:0] == 4'd504) begin 
reg1 <= {data[503:0], data[DIM:504]};
end
else if (inst[3:0] == 4'd505) begin 
reg1 <= {data[504:0], data[DIM:505]};
end
else if (inst[3:0] == 4'd506) begin 
reg1 <= {data[505:0], data[DIM:506]};
end
else if (inst[3:0] == 4'd507) begin 
reg1 <= {data[506:0], data[DIM:507]};
end
else if (inst[3:0] == 4'd508) begin 
reg1 <= {data[507:0], data[DIM:508]};
end
else if (inst[3:0] == 4'd509) begin 
reg1 <= {data[508:0], data[DIM:509]};
end
else if (inst[3:0] == 4'd510) begin 
reg1 <= {data[509:0], data[DIM:510]};
end
else if (inst[3:0] == 4'd511) begin 
reg1 <= {data[510:0], data[DIM:511]};
end
else if (inst[3:0] == 4'd512) begin 
reg1 <= {data[511:0], data[DIM:512]};
end
else if (inst[3:0] == 4'd513) begin 
reg1 <= {data[512:0], data[DIM:513]};
end
else if (inst[3:0] == 4'd514) begin 
reg1 <= {data[513:0], data[DIM:514]};
end
else if (inst[3:0] == 4'd515) begin 
reg1 <= {data[514:0], data[DIM:515]};
end
else if (inst[3:0] == 4'd516) begin 
reg1 <= {data[515:0], data[DIM:516]};
end
else if (inst[3:0] == 4'd517) begin 
reg1 <= {data[516:0], data[DIM:517]};
end
else if (inst[3:0] == 4'd518) begin 
reg1 <= {data[517:0], data[DIM:518]};
end
else if (inst[3:0] == 4'd519) begin 
reg1 <= {data[518:0], data[DIM:519]};
end
else if (inst[3:0] == 4'd520) begin 
reg1 <= {data[519:0], data[DIM:520]};
end
else if (inst[3:0] == 4'd521) begin 
reg1 <= {data[520:0], data[DIM:521]};
end
else if (inst[3:0] == 4'd522) begin 
reg1 <= {data[521:0], data[DIM:522]};
end
else if (inst[3:0] == 4'd523) begin 
reg1 <= {data[522:0], data[DIM:523]};
end
else if (inst[3:0] == 4'd524) begin 
reg1 <= {data[523:0], data[DIM:524]};
end
else if (inst[3:0] == 4'd525) begin 
reg1 <= {data[524:0], data[DIM:525]};
end
else if (inst[3:0] == 4'd526) begin 
reg1 <= {data[525:0], data[DIM:526]};
end
else if (inst[3:0] == 4'd527) begin 
reg1 <= {data[526:0], data[DIM:527]};
end
else if (inst[3:0] == 4'd528) begin 
reg1 <= {data[527:0], data[DIM:528]};
end
else if (inst[3:0] == 4'd529) begin 
reg1 <= {data[528:0], data[DIM:529]};
end
else if (inst[3:0] == 4'd530) begin 
reg1 <= {data[529:0], data[DIM:530]};
end
else if (inst[3:0] == 4'd531) begin 
reg1 <= {data[530:0], data[DIM:531]};
end
else if (inst[3:0] == 4'd532) begin 
reg1 <= {data[531:0], data[DIM:532]};
end
else if (inst[3:0] == 4'd533) begin 
reg1 <= {data[532:0], data[DIM:533]};
end
else if (inst[3:0] == 4'd534) begin 
reg1 <= {data[533:0], data[DIM:534]};
end
else if (inst[3:0] == 4'd535) begin 
reg1 <= {data[534:0], data[DIM:535]};
end
else if (inst[3:0] == 4'd536) begin 
reg1 <= {data[535:0], data[DIM:536]};
end
else if (inst[3:0] == 4'd537) begin 
reg1 <= {data[536:0], data[DIM:537]};
end
else if (inst[3:0] == 4'd538) begin 
reg1 <= {data[537:0], data[DIM:538]};
end
else if (inst[3:0] == 4'd539) begin 
reg1 <= {data[538:0], data[DIM:539]};
end
else if (inst[3:0] == 4'd540) begin 
reg1 <= {data[539:0], data[DIM:540]};
end
else if (inst[3:0] == 4'd541) begin 
reg1 <= {data[540:0], data[DIM:541]};
end
else if (inst[3:0] == 4'd542) begin 
reg1 <= {data[541:0], data[DIM:542]};
end
else if (inst[3:0] == 4'd543) begin 
reg1 <= {data[542:0], data[DIM:543]};
end
else if (inst[3:0] == 4'd544) begin 
reg1 <= {data[543:0], data[DIM:544]};
end
else if (inst[3:0] == 4'd545) begin 
reg1 <= {data[544:0], data[DIM:545]};
end
else if (inst[3:0] == 4'd546) begin 
reg1 <= {data[545:0], data[DIM:546]};
end
else if (inst[3:0] == 4'd547) begin 
reg1 <= {data[546:0], data[DIM:547]};
end
else if (inst[3:0] == 4'd548) begin 
reg1 <= {data[547:0], data[DIM:548]};
end
else if (inst[3:0] == 4'd549) begin 
reg1 <= {data[548:0], data[DIM:549]};
end
else if (inst[3:0] == 4'd550) begin 
reg1 <= {data[549:0], data[DIM:550]};
end
else if (inst[3:0] == 4'd551) begin 
reg1 <= {data[550:0], data[DIM:551]};
end
else if (inst[3:0] == 4'd552) begin 
reg1 <= {data[551:0], data[DIM:552]};
end
else if (inst[3:0] == 4'd553) begin 
reg1 <= {data[552:0], data[DIM:553]};
end
else if (inst[3:0] == 4'd554) begin 
reg1 <= {data[553:0], data[DIM:554]};
end
else if (inst[3:0] == 4'd555) begin 
reg1 <= {data[554:0], data[DIM:555]};
end
else if (inst[3:0] == 4'd556) begin 
reg1 <= {data[555:0], data[DIM:556]};
end
else if (inst[3:0] == 4'd557) begin 
reg1 <= {data[556:0], data[DIM:557]};
end
else if (inst[3:0] == 4'd558) begin 
reg1 <= {data[557:0], data[DIM:558]};
end
else if (inst[3:0] == 4'd559) begin 
reg1 <= {data[558:0], data[DIM:559]};
end
else if (inst[3:0] == 4'd560) begin 
reg1 <= {data[559:0], data[DIM:560]};
end
else if (inst[3:0] == 4'd561) begin 
reg1 <= {data[560:0], data[DIM:561]};
end
else if (inst[3:0] == 4'd562) begin 
reg1 <= {data[561:0], data[DIM:562]};
end
else if (inst[3:0] == 4'd563) begin 
reg1 <= {data[562:0], data[DIM:563]};
end
else if (inst[3:0] == 4'd564) begin 
reg1 <= {data[563:0], data[DIM:564]};
end
else if (inst[3:0] == 4'd565) begin 
reg1 <= {data[564:0], data[DIM:565]};
end
else if (inst[3:0] == 4'd566) begin 
reg1 <= {data[565:0], data[DIM:566]};
end
else if (inst[3:0] == 4'd567) begin 
reg1 <= {data[566:0], data[DIM:567]};
end
else if (inst[3:0] == 4'd568) begin 
reg1 <= {data[567:0], data[DIM:568]};
end
else if (inst[3:0] == 4'd569) begin 
reg1 <= {data[568:0], data[DIM:569]};
end
else if (inst[3:0] == 4'd570) begin 
reg1 <= {data[569:0], data[DIM:570]};
end
else if (inst[3:0] == 4'd571) begin 
reg1 <= {data[570:0], data[DIM:571]};
end
else if (inst[3:0] == 4'd572) begin 
reg1 <= {data[571:0], data[DIM:572]};
end
else if (inst[3:0] == 4'd573) begin 
reg1 <= {data[572:0], data[DIM:573]};
end
else if (inst[3:0] == 4'd574) begin 
reg1 <= {data[573:0], data[DIM:574]};
end
else if (inst[3:0] == 4'd575) begin 
reg1 <= {data[574:0], data[DIM:575]};
end
else if (inst[3:0] == 4'd576) begin 
reg1 <= {data[575:0], data[DIM:576]};
end
else if (inst[3:0] == 4'd577) begin 
reg1 <= {data[576:0], data[DIM:577]};
end
else if (inst[3:0] == 4'd578) begin 
reg1 <= {data[577:0], data[DIM:578]};
end
else if (inst[3:0] == 4'd579) begin 
reg1 <= {data[578:0], data[DIM:579]};
end
else if (inst[3:0] == 4'd580) begin 
reg1 <= {data[579:0], data[DIM:580]};
end
else if (inst[3:0] == 4'd581) begin 
reg1 <= {data[580:0], data[DIM:581]};
end
else if (inst[3:0] == 4'd582) begin 
reg1 <= {data[581:0], data[DIM:582]};
end
else if (inst[3:0] == 4'd583) begin 
reg1 <= {data[582:0], data[DIM:583]};
end
else if (inst[3:0] == 4'd584) begin 
reg1 <= {data[583:0], data[DIM:584]};
end
else if (inst[3:0] == 4'd585) begin 
reg1 <= {data[584:0], data[DIM:585]};
end
else if (inst[3:0] == 4'd586) begin 
reg1 <= {data[585:0], data[DIM:586]};
end
else if (inst[3:0] == 4'd587) begin 
reg1 <= {data[586:0], data[DIM:587]};
end
else if (inst[3:0] == 4'd588) begin 
reg1 <= {data[587:0], data[DIM:588]};
end
else if (inst[3:0] == 4'd589) begin 
reg1 <= {data[588:0], data[DIM:589]};
end
else if (inst[3:0] == 4'd590) begin 
reg1 <= {data[589:0], data[DIM:590]};
end
else if (inst[3:0] == 4'd591) begin 
reg1 <= {data[590:0], data[DIM:591]};
end
else if (inst[3:0] == 4'd592) begin 
reg1 <= {data[591:0], data[DIM:592]};
end
else if (inst[3:0] == 4'd593) begin 
reg1 <= {data[592:0], data[DIM:593]};
end
else if (inst[3:0] == 4'd594) begin 
reg1 <= {data[593:0], data[DIM:594]};
end
else if (inst[3:0] == 4'd595) begin 
reg1 <= {data[594:0], data[DIM:595]};
end
else if (inst[3:0] == 4'd596) begin 
reg1 <= {data[595:0], data[DIM:596]};
end
else if (inst[3:0] == 4'd597) begin 
reg1 <= {data[596:0], data[DIM:597]};
end
else if (inst[3:0] == 4'd598) begin 
reg1 <= {data[597:0], data[DIM:598]};
end
else if (inst[3:0] == 4'd599) begin 
reg1 <= {data[598:0], data[DIM:599]};
end
else if (inst[3:0] == 4'd600) begin 
reg1 <= {data[599:0], data[DIM:600]};
end
else if (inst[3:0] == 4'd601) begin 
reg1 <= {data[600:0], data[DIM:601]};
end
else if (inst[3:0] == 4'd602) begin 
reg1 <= {data[601:0], data[DIM:602]};
end
else if (inst[3:0] == 4'd603) begin 
reg1 <= {data[602:0], data[DIM:603]};
end
else if (inst[3:0] == 4'd604) begin 
reg1 <= {data[603:0], data[DIM:604]};
end
else if (inst[3:0] == 4'd605) begin 
reg1 <= {data[604:0], data[DIM:605]};
end
else if (inst[3:0] == 4'd606) begin 
reg1 <= {data[605:0], data[DIM:606]};
end
else if (inst[3:0] == 4'd607) begin 
reg1 <= {data[606:0], data[DIM:607]};
end
else if (inst[3:0] == 4'd608) begin 
reg1 <= {data[607:0], data[DIM:608]};
end
else if (inst[3:0] == 4'd609) begin 
reg1 <= {data[608:0], data[DIM:609]};
end
else if (inst[3:0] == 4'd610) begin 
reg1 <= {data[609:0], data[DIM:610]};
end
else if (inst[3:0] == 4'd611) begin 
reg1 <= {data[610:0], data[DIM:611]};
end
else if (inst[3:0] == 4'd612) begin 
reg1 <= {data[611:0], data[DIM:612]};
end
else if (inst[3:0] == 4'd613) begin 
reg1 <= {data[612:0], data[DIM:613]};
end
else if (inst[3:0] == 4'd614) begin 
reg1 <= {data[613:0], data[DIM:614]};
end
else if (inst[3:0] == 4'd615) begin 
reg1 <= {data[614:0], data[DIM:615]};
end
else if (inst[3:0] == 4'd616) begin 
reg1 <= {data[615:0], data[DIM:616]};
end
else if (inst[3:0] == 4'd617) begin 
reg1 <= {data[616:0], data[DIM:617]};
end
else if (inst[3:0] == 4'd618) begin 
reg1 <= {data[617:0], data[DIM:618]};
end
else if (inst[3:0] == 4'd619) begin 
reg1 <= {data[618:0], data[DIM:619]};
end
else if (inst[3:0] == 4'd620) begin 
reg1 <= {data[619:0], data[DIM:620]};
end
else if (inst[3:0] == 4'd621) begin 
reg1 <= {data[620:0], data[DIM:621]};
end
else if (inst[3:0] == 4'd622) begin 
reg1 <= {data[621:0], data[DIM:622]};
end
else if (inst[3:0] == 4'd623) begin 
reg1 <= {data[622:0], data[DIM:623]};
end
else if (inst[3:0] == 4'd624) begin 
reg1 <= {data[623:0], data[DIM:624]};
end
else if (inst[3:0] == 4'd625) begin 
reg1 <= {data[624:0], data[DIM:625]};
end
else if (inst[3:0] == 4'd626) begin 
reg1 <= {data[625:0], data[DIM:626]};
end
else if (inst[3:0] == 4'd627) begin 
reg1 <= {data[626:0], data[DIM:627]};
end
else if (inst[3:0] == 4'd628) begin 
reg1 <= {data[627:0], data[DIM:628]};
end
else if (inst[3:0] == 4'd629) begin 
reg1 <= {data[628:0], data[DIM:629]};
end
else if (inst[3:0] == 4'd630) begin 
reg1 <= {data[629:0], data[DIM:630]};
end
else if (inst[3:0] == 4'd631) begin 
reg1 <= {data[630:0], data[DIM:631]};
end
else if (inst[3:0] == 4'd632) begin 
reg1 <= {data[631:0], data[DIM:632]};
end
else if (inst[3:0] == 4'd633) begin 
reg1 <= {data[632:0], data[DIM:633]};
end
else if (inst[3:0] == 4'd634) begin 
reg1 <= {data[633:0], data[DIM:634]};
end
else if (inst[3:0] == 4'd635) begin 
reg1 <= {data[634:0], data[DIM:635]};
end
else if (inst[3:0] == 4'd636) begin 
reg1 <= {data[635:0], data[DIM:636]};
end
else if (inst[3:0] == 4'd637) begin 
reg1 <= {data[636:0], data[DIM:637]};
end
else if (inst[3:0] == 4'd638) begin 
reg1 <= {data[637:0], data[DIM:638]};
end
else if (inst[3:0] == 4'd639) begin 
reg1 <= {data[638:0], data[DIM:639]};
end
else if (inst[3:0] == 4'd640) begin 
reg1 <= {data[639:0], data[DIM:640]};
end
else if (inst[3:0] == 4'd641) begin 
reg1 <= {data[640:0], data[DIM:641]};
end
else if (inst[3:0] == 4'd642) begin 
reg1 <= {data[641:0], data[DIM:642]};
end
else if (inst[3:0] == 4'd643) begin 
reg1 <= {data[642:0], data[DIM:643]};
end
else if (inst[3:0] == 4'd644) begin 
reg1 <= {data[643:0], data[DIM:644]};
end
else if (inst[3:0] == 4'd645) begin 
reg1 <= {data[644:0], data[DIM:645]};
end
else if (inst[3:0] == 4'd646) begin 
reg1 <= {data[645:0], data[DIM:646]};
end
else if (inst[3:0] == 4'd647) begin 
reg1 <= {data[646:0], data[DIM:647]};
end
else if (inst[3:0] == 4'd648) begin 
reg1 <= {data[647:0], data[DIM:648]};
end
else if (inst[3:0] == 4'd649) begin 
reg1 <= {data[648:0], data[DIM:649]};
end
else if (inst[3:0] == 4'd650) begin 
reg1 <= {data[649:0], data[DIM:650]};
end
else if (inst[3:0] == 4'd651) begin 
reg1 <= {data[650:0], data[DIM:651]};
end
else if (inst[3:0] == 4'd652) begin 
reg1 <= {data[651:0], data[DIM:652]};
end
else if (inst[3:0] == 4'd653) begin 
reg1 <= {data[652:0], data[DIM:653]};
end
else if (inst[3:0] == 4'd654) begin 
reg1 <= {data[653:0], data[DIM:654]};
end
else if (inst[3:0] == 4'd655) begin 
reg1 <= {data[654:0], data[DIM:655]};
end
else if (inst[3:0] == 4'd656) begin 
reg1 <= {data[655:0], data[DIM:656]};
end
else if (inst[3:0] == 4'd657) begin 
reg1 <= {data[656:0], data[DIM:657]};
end
else if (inst[3:0] == 4'd658) begin 
reg1 <= {data[657:0], data[DIM:658]};
end
else if (inst[3:0] == 4'd659) begin 
reg1 <= {data[658:0], data[DIM:659]};
end
else if (inst[3:0] == 4'd660) begin 
reg1 <= {data[659:0], data[DIM:660]};
end
else if (inst[3:0] == 4'd661) begin 
reg1 <= {data[660:0], data[DIM:661]};
end
else if (inst[3:0] == 4'd662) begin 
reg1 <= {data[661:0], data[DIM:662]};
end
else if (inst[3:0] == 4'd663) begin 
reg1 <= {data[662:0], data[DIM:663]};
end
else if (inst[3:0] == 4'd664) begin 
reg1 <= {data[663:0], data[DIM:664]};
end
else if (inst[3:0] == 4'd665) begin 
reg1 <= {data[664:0], data[DIM:665]};
end
else if (inst[3:0] == 4'd666) begin 
reg1 <= {data[665:0], data[DIM:666]};
end
else if (inst[3:0] == 4'd667) begin 
reg1 <= {data[666:0], data[DIM:667]};
end
else if (inst[3:0] == 4'd668) begin 
reg1 <= {data[667:0], data[DIM:668]};
end
else if (inst[3:0] == 4'd669) begin 
reg1 <= {data[668:0], data[DIM:669]};
end
else if (inst[3:0] == 4'd670) begin 
reg1 <= {data[669:0], data[DIM:670]};
end
else if (inst[3:0] == 4'd671) begin 
reg1 <= {data[670:0], data[DIM:671]};
end
else if (inst[3:0] == 4'd672) begin 
reg1 <= {data[671:0], data[DIM:672]};
end
else if (inst[3:0] == 4'd673) begin 
reg1 <= {data[672:0], data[DIM:673]};
end
else if (inst[3:0] == 4'd674) begin 
reg1 <= {data[673:0], data[DIM:674]};
end
else if (inst[3:0] == 4'd675) begin 
reg1 <= {data[674:0], data[DIM:675]};
end
else if (inst[3:0] == 4'd676) begin 
reg1 <= {data[675:0], data[DIM:676]};
end
else if (inst[3:0] == 4'd677) begin 
reg1 <= {data[676:0], data[DIM:677]};
end
else if (inst[3:0] == 4'd678) begin 
reg1 <= {data[677:0], data[DIM:678]};
end
else if (inst[3:0] == 4'd679) begin 
reg1 <= {data[678:0], data[DIM:679]};
end
else if (inst[3:0] == 4'd680) begin 
reg1 <= {data[679:0], data[DIM:680]};
end
else if (inst[3:0] == 4'd681) begin 
reg1 <= {data[680:0], data[DIM:681]};
end
else if (inst[3:0] == 4'd682) begin 
reg1 <= {data[681:0], data[DIM:682]};
end
else if (inst[3:0] == 4'd683) begin 
reg1 <= {data[682:0], data[DIM:683]};
end
else if (inst[3:0] == 4'd684) begin 
reg1 <= {data[683:0], data[DIM:684]};
end
else if (inst[3:0] == 4'd685) begin 
reg1 <= {data[684:0], data[DIM:685]};
end
else if (inst[3:0] == 4'd686) begin 
reg1 <= {data[685:0], data[DIM:686]};
end
else if (inst[3:0] == 4'd687) begin 
reg1 <= {data[686:0], data[DIM:687]};
end
else if (inst[3:0] == 4'd688) begin 
reg1 <= {data[687:0], data[DIM:688]};
end
else if (inst[3:0] == 4'd689) begin 
reg1 <= {data[688:0], data[DIM:689]};
end
else if (inst[3:0] == 4'd690) begin 
reg1 <= {data[689:0], data[DIM:690]};
end
else if (inst[3:0] == 4'd691) begin 
reg1 <= {data[690:0], data[DIM:691]};
end
else if (inst[3:0] == 4'd692) begin 
reg1 <= {data[691:0], data[DIM:692]};
end
else if (inst[3:0] == 4'd693) begin 
reg1 <= {data[692:0], data[DIM:693]};
end
else if (inst[3:0] == 4'd694) begin 
reg1 <= {data[693:0], data[DIM:694]};
end
else if (inst[3:0] == 4'd695) begin 
reg1 <= {data[694:0], data[DIM:695]};
end
else if (inst[3:0] == 4'd696) begin 
reg1 <= {data[695:0], data[DIM:696]};
end
else if (inst[3:0] == 4'd697) begin 
reg1 <= {data[696:0], data[DIM:697]};
end
else if (inst[3:0] == 4'd698) begin 
reg1 <= {data[697:0], data[DIM:698]};
end
else if (inst[3:0] == 4'd699) begin 
reg1 <= {data[698:0], data[DIM:699]};
end
else if (inst[3:0] == 4'd700) begin 
reg1 <= {data[699:0], data[DIM:700]};
end
else if (inst[3:0] == 4'd701) begin 
reg1 <= {data[700:0], data[DIM:701]};
end
else if (inst[3:0] == 4'd702) begin 
reg1 <= {data[701:0], data[DIM:702]};
end
else if (inst[3:0] == 4'd703) begin 
reg1 <= {data[702:0], data[DIM:703]};
end
else if (inst[3:0] == 4'd704) begin 
reg1 <= {data[703:0], data[DIM:704]};
end
else if (inst[3:0] == 4'd705) begin 
reg1 <= {data[704:0], data[DIM:705]};
end
else if (inst[3:0] == 4'd706) begin 
reg1 <= {data[705:0], data[DIM:706]};
end
else if (inst[3:0] == 4'd707) begin 
reg1 <= {data[706:0], data[DIM:707]};
end
else if (inst[3:0] == 4'd708) begin 
reg1 <= {data[707:0], data[DIM:708]};
end
else if (inst[3:0] == 4'd709) begin 
reg1 <= {data[708:0], data[DIM:709]};
end
else if (inst[3:0] == 4'd710) begin 
reg1 <= {data[709:0], data[DIM:710]};
end
else if (inst[3:0] == 4'd711) begin 
reg1 <= {data[710:0], data[DIM:711]};
end
else if (inst[3:0] == 4'd712) begin 
reg1 <= {data[711:0], data[DIM:712]};
end
else if (inst[3:0] == 4'd713) begin 
reg1 <= {data[712:0], data[DIM:713]};
end
else if (inst[3:0] == 4'd714) begin 
reg1 <= {data[713:0], data[DIM:714]};
end
else if (inst[3:0] == 4'd715) begin 
reg1 <= {data[714:0], data[DIM:715]};
end
else if (inst[3:0] == 4'd716) begin 
reg1 <= {data[715:0], data[DIM:716]};
end
else if (inst[3:0] == 4'd717) begin 
reg1 <= {data[716:0], data[DIM:717]};
end
else if (inst[3:0] == 4'd718) begin 
reg1 <= {data[717:0], data[DIM:718]};
end
else if (inst[3:0] == 4'd719) begin 
reg1 <= {data[718:0], data[DIM:719]};
end
else if (inst[3:0] == 4'd720) begin 
reg1 <= {data[719:0], data[DIM:720]};
end
else if (inst[3:0] == 4'd721) begin 
reg1 <= {data[720:0], data[DIM:721]};
end
else if (inst[3:0] == 4'd722) begin 
reg1 <= {data[721:0], data[DIM:722]};
end
else if (inst[3:0] == 4'd723) begin 
reg1 <= {data[722:0], data[DIM:723]};
end
else if (inst[3:0] == 4'd724) begin 
reg1 <= {data[723:0], data[DIM:724]};
end
else if (inst[3:0] == 4'd725) begin 
reg1 <= {data[724:0], data[DIM:725]};
end
else if (inst[3:0] == 4'd726) begin 
reg1 <= {data[725:0], data[DIM:726]};
end
else if (inst[3:0] == 4'd727) begin 
reg1 <= {data[726:0], data[DIM:727]};
end
else if (inst[3:0] == 4'd728) begin 
reg1 <= {data[727:0], data[DIM:728]};
end
else if (inst[3:0] == 4'd729) begin 
reg1 <= {data[728:0], data[DIM:729]};
end
else if (inst[3:0] == 4'd730) begin 
reg1 <= {data[729:0], data[DIM:730]};
end
else if (inst[3:0] == 4'd731) begin 
reg1 <= {data[730:0], data[DIM:731]};
end
else if (inst[3:0] == 4'd732) begin 
reg1 <= {data[731:0], data[DIM:732]};
end
else if (inst[3:0] == 4'd733) begin 
reg1 <= {data[732:0], data[DIM:733]};
end
else if (inst[3:0] == 4'd734) begin 
reg1 <= {data[733:0], data[DIM:734]};
end
else if (inst[3:0] == 4'd735) begin 
reg1 <= {data[734:0], data[DIM:735]};
end
else if (inst[3:0] == 4'd736) begin 
reg1 <= {data[735:0], data[DIM:736]};
end
else if (inst[3:0] == 4'd737) begin 
reg1 <= {data[736:0], data[DIM:737]};
end
else if (inst[3:0] == 4'd738) begin 
reg1 <= {data[737:0], data[DIM:738]};
end
else if (inst[3:0] == 4'd739) begin 
reg1 <= {data[738:0], data[DIM:739]};
end
else if (inst[3:0] == 4'd740) begin 
reg1 <= {data[739:0], data[DIM:740]};
end
else if (inst[3:0] == 4'd741) begin 
reg1 <= {data[740:0], data[DIM:741]};
end
else if (inst[3:0] == 4'd742) begin 
reg1 <= {data[741:0], data[DIM:742]};
end
else if (inst[3:0] == 4'd743) begin 
reg1 <= {data[742:0], data[DIM:743]};
end
else if (inst[3:0] == 4'd744) begin 
reg1 <= {data[743:0], data[DIM:744]};
end
else if (inst[3:0] == 4'd745) begin 
reg1 <= {data[744:0], data[DIM:745]};
end
else if (inst[3:0] == 4'd746) begin 
reg1 <= {data[745:0], data[DIM:746]};
end
else if (inst[3:0] == 4'd747) begin 
reg1 <= {data[746:0], data[DIM:747]};
end
else if (inst[3:0] == 4'd748) begin 
reg1 <= {data[747:0], data[DIM:748]};
end
else if (inst[3:0] == 4'd749) begin 
reg1 <= {data[748:0], data[DIM:749]};
end
else if (inst[3:0] == 4'd750) begin 
reg1 <= {data[749:0], data[DIM:750]};
end
else if (inst[3:0] == 4'd751) begin 
reg1 <= {data[750:0], data[DIM:751]};
end
else if (inst[3:0] == 4'd752) begin 
reg1 <= {data[751:0], data[DIM:752]};
end
else if (inst[3:0] == 4'd753) begin 
reg1 <= {data[752:0], data[DIM:753]};
end
else if (inst[3:0] == 4'd754) begin 
reg1 <= {data[753:0], data[DIM:754]};
end
else if (inst[3:0] == 4'd755) begin 
reg1 <= {data[754:0], data[DIM:755]};
end
else if (inst[3:0] == 4'd756) begin 
reg1 <= {data[755:0], data[DIM:756]};
end
else if (inst[3:0] == 4'd757) begin 
reg1 <= {data[756:0], data[DIM:757]};
end
else if (inst[3:0] == 4'd758) begin 
reg1 <= {data[757:0], data[DIM:758]};
end
else if (inst[3:0] == 4'd759) begin 
reg1 <= {data[758:0], data[DIM:759]};
end
else if (inst[3:0] == 4'd760) begin 
reg1 <= {data[759:0], data[DIM:760]};
end
else if (inst[3:0] == 4'd761) begin 
reg1 <= {data[760:0], data[DIM:761]};
end
else if (inst[3:0] == 4'd762) begin 
reg1 <= {data[761:0], data[DIM:762]};
end
else if (inst[3:0] == 4'd763) begin 
reg1 <= {data[762:0], data[DIM:763]};
end
else if (inst[3:0] == 4'd764) begin 
reg1 <= {data[763:0], data[DIM:764]};
end
else if (inst[3:0] == 4'd765) begin 
reg1 <= {data[764:0], data[DIM:765]};
end
else if (inst[3:0] == 4'd766) begin 
reg1 <= {data[765:0], data[DIM:766]};
end
else if (inst[3:0] == 4'd767) begin 
reg1 <= {data[766:0], data[DIM:767]};
end
else if (inst[3:0] == 4'd768) begin 
reg1 <= {data[767:0], data[DIM:768]};
end
else if (inst[3:0] == 4'd769) begin 
reg1 <= {data[768:0], data[DIM:769]};
end
else if (inst[3:0] == 4'd770) begin 
reg1 <= {data[769:0], data[DIM:770]};
end
else if (inst[3:0] == 4'd771) begin 
reg1 <= {data[770:0], data[DIM:771]};
end
else if (inst[3:0] == 4'd772) begin 
reg1 <= {data[771:0], data[DIM:772]};
end
else if (inst[3:0] == 4'd773) begin 
reg1 <= {data[772:0], data[DIM:773]};
end
else if (inst[3:0] == 4'd774) begin 
reg1 <= {data[773:0], data[DIM:774]};
end
else if (inst[3:0] == 4'd775) begin 
reg1 <= {data[774:0], data[DIM:775]};
end
else if (inst[3:0] == 4'd776) begin 
reg1 <= {data[775:0], data[DIM:776]};
end
else if (inst[3:0] == 4'd777) begin 
reg1 <= {data[776:0], data[DIM:777]};
end
else if (inst[3:0] == 4'd778) begin 
reg1 <= {data[777:0], data[DIM:778]};
end
else if (inst[3:0] == 4'd779) begin 
reg1 <= {data[778:0], data[DIM:779]};
end
else if (inst[3:0] == 4'd780) begin 
reg1 <= {data[779:0], data[DIM:780]};
end
else if (inst[3:0] == 4'd781) begin 
reg1 <= {data[780:0], data[DIM:781]};
end
else if (inst[3:0] == 4'd782) begin 
reg1 <= {data[781:0], data[DIM:782]};
end
else if (inst[3:0] == 4'd783) begin 
reg1 <= {data[782:0], data[DIM:783]};
end
else if (inst[3:0] == 4'd784) begin 
reg1 <= {data[783:0], data[DIM:784]};
end
else if (inst[3:0] == 4'd785) begin 
reg1 <= {data[784:0], data[DIM:785]};
end
else if (inst[3:0] == 4'd786) begin 
reg1 <= {data[785:0], data[DIM:786]};
end
else if (inst[3:0] == 4'd787) begin 
reg1 <= {data[786:0], data[DIM:787]};
end
else if (inst[3:0] == 4'd788) begin 
reg1 <= {data[787:0], data[DIM:788]};
end
else if (inst[3:0] == 4'd789) begin 
reg1 <= {data[788:0], data[DIM:789]};
end
else if (inst[3:0] == 4'd790) begin 
reg1 <= {data[789:0], data[DIM:790]};
end
else if (inst[3:0] == 4'd791) begin 
reg1 <= {data[790:0], data[DIM:791]};
end
else if (inst[3:0] == 4'd792) begin 
reg1 <= {data[791:0], data[DIM:792]};
end
else if (inst[3:0] == 4'd793) begin 
reg1 <= {data[792:0], data[DIM:793]};
end
else if (inst[3:0] == 4'd794) begin 
reg1 <= {data[793:0], data[DIM:794]};
end
else if (inst[3:0] == 4'd795) begin 
reg1 <= {data[794:0], data[DIM:795]};
end
else if (inst[3:0] == 4'd796) begin 
reg1 <= {data[795:0], data[DIM:796]};
end
else if (inst[3:0] == 4'd797) begin 
reg1 <= {data[796:0], data[DIM:797]};
end
else if (inst[3:0] == 4'd798) begin 
reg1 <= {data[797:0], data[DIM:798]};
end
else if (inst[3:0] == 4'd799) begin 
reg1 <= {data[798:0], data[DIM:799]};
end
else if (inst[3:0] == 4'd800) begin 
reg1 <= {data[799:0], data[DIM:800]};
end
else if (inst[3:0] == 4'd801) begin 
reg1 <= {data[800:0], data[DIM:801]};
end
else if (inst[3:0] == 4'd802) begin 
reg1 <= {data[801:0], data[DIM:802]};
end
else if (inst[3:0] == 4'd803) begin 
reg1 <= {data[802:0], data[DIM:803]};
end
else if (inst[3:0] == 4'd804) begin 
reg1 <= {data[803:0], data[DIM:804]};
end
else if (inst[3:0] == 4'd805) begin 
reg1 <= {data[804:0], data[DIM:805]};
end
else if (inst[3:0] == 4'd806) begin 
reg1 <= {data[805:0], data[DIM:806]};
end
else if (inst[3:0] == 4'd807) begin 
reg1 <= {data[806:0], data[DIM:807]};
end
else if (inst[3:0] == 4'd808) begin 
reg1 <= {data[807:0], data[DIM:808]};
end
else if (inst[3:0] == 4'd809) begin 
reg1 <= {data[808:0], data[DIM:809]};
end
else if (inst[3:0] == 4'd810) begin 
reg1 <= {data[809:0], data[DIM:810]};
end
else if (inst[3:0] == 4'd811) begin 
reg1 <= {data[810:0], data[DIM:811]};
end
else if (inst[3:0] == 4'd812) begin 
reg1 <= {data[811:0], data[DIM:812]};
end
else if (inst[3:0] == 4'd813) begin 
reg1 <= {data[812:0], data[DIM:813]};
end
else if (inst[3:0] == 4'd814) begin 
reg1 <= {data[813:0], data[DIM:814]};
end
else if (inst[3:0] == 4'd815) begin 
reg1 <= {data[814:0], data[DIM:815]};
end
else if (inst[3:0] == 4'd816) begin 
reg1 <= {data[815:0], data[DIM:816]};
end
else if (inst[3:0] == 4'd817) begin 
reg1 <= {data[816:0], data[DIM:817]};
end
else if (inst[3:0] == 4'd818) begin 
reg1 <= {data[817:0], data[DIM:818]};
end
else if (inst[3:0] == 4'd819) begin 
reg1 <= {data[818:0], data[DIM:819]};
end
else if (inst[3:0] == 4'd820) begin 
reg1 <= {data[819:0], data[DIM:820]};
end
else if (inst[3:0] == 4'd821) begin 
reg1 <= {data[820:0], data[DIM:821]};
end
else if (inst[3:0] == 4'd822) begin 
reg1 <= {data[821:0], data[DIM:822]};
end
else if (inst[3:0] == 4'd823) begin 
reg1 <= {data[822:0], data[DIM:823]};
end
else if (inst[3:0] == 4'd824) begin 
reg1 <= {data[823:0], data[DIM:824]};
end
else if (inst[3:0] == 4'd825) begin 
reg1 <= {data[824:0], data[DIM:825]};
end
else if (inst[3:0] == 4'd826) begin 
reg1 <= {data[825:0], data[DIM:826]};
end
else if (inst[3:0] == 4'd827) begin 
reg1 <= {data[826:0], data[DIM:827]};
end
else if (inst[3:0] == 4'd828) begin 
reg1 <= {data[827:0], data[DIM:828]};
end
else if (inst[3:0] == 4'd829) begin 
reg1 <= {data[828:0], data[DIM:829]};
end
else if (inst[3:0] == 4'd830) begin 
reg1 <= {data[829:0], data[DIM:830]};
end
else if (inst[3:0] == 4'd831) begin 
reg1 <= {data[830:0], data[DIM:831]};
end
else if (inst[3:0] == 4'd832) begin 
reg1 <= {data[831:0], data[DIM:832]};
end
else if (inst[3:0] == 4'd833) begin 
reg1 <= {data[832:0], data[DIM:833]};
end
else if (inst[3:0] == 4'd834) begin 
reg1 <= {data[833:0], data[DIM:834]};
end
else if (inst[3:0] == 4'd835) begin 
reg1 <= {data[834:0], data[DIM:835]};
end
else if (inst[3:0] == 4'd836) begin 
reg1 <= {data[835:0], data[DIM:836]};
end
else if (inst[3:0] == 4'd837) begin 
reg1 <= {data[836:0], data[DIM:837]};
end
else if (inst[3:0] == 4'd838) begin 
reg1 <= {data[837:0], data[DIM:838]};
end
else if (inst[3:0] == 4'd839) begin 
reg1 <= {data[838:0], data[DIM:839]};
end
else if (inst[3:0] == 4'd840) begin 
reg1 <= {data[839:0], data[DIM:840]};
end
else if (inst[3:0] == 4'd841) begin 
reg1 <= {data[840:0], data[DIM:841]};
end
else if (inst[3:0] == 4'd842) begin 
reg1 <= {data[841:0], data[DIM:842]};
end
else if (inst[3:0] == 4'd843) begin 
reg1 <= {data[842:0], data[DIM:843]};
end
else if (inst[3:0] == 4'd844) begin 
reg1 <= {data[843:0], data[DIM:844]};
end
else if (inst[3:0] == 4'd845) begin 
reg1 <= {data[844:0], data[DIM:845]};
end
else if (inst[3:0] == 4'd846) begin 
reg1 <= {data[845:0], data[DIM:846]};
end
else if (inst[3:0] == 4'd847) begin 
reg1 <= {data[846:0], data[DIM:847]};
end
else if (inst[3:0] == 4'd848) begin 
reg1 <= {data[847:0], data[DIM:848]};
end
else if (inst[3:0] == 4'd849) begin 
reg1 <= {data[848:0], data[DIM:849]};
end
else if (inst[3:0] == 4'd850) begin 
reg1 <= {data[849:0], data[DIM:850]};
end
else if (inst[3:0] == 4'd851) begin 
reg1 <= {data[850:0], data[DIM:851]};
end
else if (inst[3:0] == 4'd852) begin 
reg1 <= {data[851:0], data[DIM:852]};
end
else if (inst[3:0] == 4'd853) begin 
reg1 <= {data[852:0], data[DIM:853]};
end
else if (inst[3:0] == 4'd854) begin 
reg1 <= {data[853:0], data[DIM:854]};
end
else if (inst[3:0] == 4'd855) begin 
reg1 <= {data[854:0], data[DIM:855]};
end
else if (inst[3:0] == 4'd856) begin 
reg1 <= {data[855:0], data[DIM:856]};
end
else if (inst[3:0] == 4'd857) begin 
reg1 <= {data[856:0], data[DIM:857]};
end
else if (inst[3:0] == 4'd858) begin 
reg1 <= {data[857:0], data[DIM:858]};
end
else if (inst[3:0] == 4'd859) begin 
reg1 <= {data[858:0], data[DIM:859]};
end
else if (inst[3:0] == 4'd860) begin 
reg1 <= {data[859:0], data[DIM:860]};
end
else if (inst[3:0] == 4'd861) begin 
reg1 <= {data[860:0], data[DIM:861]};
end
else if (inst[3:0] == 4'd862) begin 
reg1 <= {data[861:0], data[DIM:862]};
end
else if (inst[3:0] == 4'd863) begin 
reg1 <= {data[862:0], data[DIM:863]};
end
else if (inst[3:0] == 4'd864) begin 
reg1 <= {data[863:0], data[DIM:864]};
end
else if (inst[3:0] == 4'd865) begin 
reg1 <= {data[864:0], data[DIM:865]};
end
else if (inst[3:0] == 4'd866) begin 
reg1 <= {data[865:0], data[DIM:866]};
end
else if (inst[3:0] == 4'd867) begin 
reg1 <= {data[866:0], data[DIM:867]};
end
else if (inst[3:0] == 4'd868) begin 
reg1 <= {data[867:0], data[DIM:868]};
end
else if (inst[3:0] == 4'd869) begin 
reg1 <= {data[868:0], data[DIM:869]};
end
else if (inst[3:0] == 4'd870) begin 
reg1 <= {data[869:0], data[DIM:870]};
end
else if (inst[3:0] == 4'd871) begin 
reg1 <= {data[870:0], data[DIM:871]};
end
else if (inst[3:0] == 4'd872) begin 
reg1 <= {data[871:0], data[DIM:872]};
end
else if (inst[3:0] == 4'd873) begin 
reg1 <= {data[872:0], data[DIM:873]};
end
else if (inst[3:0] == 4'd874) begin 
reg1 <= {data[873:0], data[DIM:874]};
end
else if (inst[3:0] == 4'd875) begin 
reg1 <= {data[874:0], data[DIM:875]};
end
else if (inst[3:0] == 4'd876) begin 
reg1 <= {data[875:0], data[DIM:876]};
end
else if (inst[3:0] == 4'd877) begin 
reg1 <= {data[876:0], data[DIM:877]};
end
else if (inst[3:0] == 4'd878) begin 
reg1 <= {data[877:0], data[DIM:878]};
end
else if (inst[3:0] == 4'd879) begin 
reg1 <= {data[878:0], data[DIM:879]};
end
else if (inst[3:0] == 4'd880) begin 
reg1 <= {data[879:0], data[DIM:880]};
end
else if (inst[3:0] == 4'd881) begin 
reg1 <= {data[880:0], data[DIM:881]};
end
else if (inst[3:0] == 4'd882) begin 
reg1 <= {data[881:0], data[DIM:882]};
end
else if (inst[3:0] == 4'd883) begin 
reg1 <= {data[882:0], data[DIM:883]};
end
else if (inst[3:0] == 4'd884) begin 
reg1 <= {data[883:0], data[DIM:884]};
end
else if (inst[3:0] == 4'd885) begin 
reg1 <= {data[884:0], data[DIM:885]};
end
else if (inst[3:0] == 4'd886) begin 
reg1 <= {data[885:0], data[DIM:886]};
end
else if (inst[3:0] == 4'd887) begin 
reg1 <= {data[886:0], data[DIM:887]};
end
else if (inst[3:0] == 4'd888) begin 
reg1 <= {data[887:0], data[DIM:888]};
end
else if (inst[3:0] == 4'd889) begin 
reg1 <= {data[888:0], data[DIM:889]};
end
else if (inst[3:0] == 4'd890) begin 
reg1 <= {data[889:0], data[DIM:890]};
end
else if (inst[3:0] == 4'd891) begin 
reg1 <= {data[890:0], data[DIM:891]};
end
else if (inst[3:0] == 4'd892) begin 
reg1 <= {data[891:0], data[DIM:892]};
end
else if (inst[3:0] == 4'd893) begin 
reg1 <= {data[892:0], data[DIM:893]};
end
else if (inst[3:0] == 4'd894) begin 
reg1 <= {data[893:0], data[DIM:894]};
end
else if (inst[3:0] == 4'd895) begin 
reg1 <= {data[894:0], data[DIM:895]};
end
else if (inst[3:0] == 4'd896) begin 
reg1 <= {data[895:0], data[DIM:896]};
end
else if (inst[3:0] == 4'd897) begin 
reg1 <= {data[896:0], data[DIM:897]};
end
else if (inst[3:0] == 4'd898) begin 
reg1 <= {data[897:0], data[DIM:898]};
end
else if (inst[3:0] == 4'd899) begin 
reg1 <= {data[898:0], data[DIM:899]};
end
else if (inst[3:0] == 4'd900) begin 
reg1 <= {data[899:0], data[DIM:900]};
end
else if (inst[3:0] == 4'd901) begin 
reg1 <= {data[900:0], data[DIM:901]};
end
else if (inst[3:0] == 4'd902) begin 
reg1 <= {data[901:0], data[DIM:902]};
end
else if (inst[3:0] == 4'd903) begin 
reg1 <= {data[902:0], data[DIM:903]};
end
else if (inst[3:0] == 4'd904) begin 
reg1 <= {data[903:0], data[DIM:904]};
end
else if (inst[3:0] == 4'd905) begin 
reg1 <= {data[904:0], data[DIM:905]};
end
else if (inst[3:0] == 4'd906) begin 
reg1 <= {data[905:0], data[DIM:906]};
end
else if (inst[3:0] == 4'd907) begin 
reg1 <= {data[906:0], data[DIM:907]};
end
else if (inst[3:0] == 4'd908) begin 
reg1 <= {data[907:0], data[DIM:908]};
end
else if (inst[3:0] == 4'd909) begin 
reg1 <= {data[908:0], data[DIM:909]};
end
else if (inst[3:0] == 4'd910) begin 
reg1 <= {data[909:0], data[DIM:910]};
end
else if (inst[3:0] == 4'd911) begin 
reg1 <= {data[910:0], data[DIM:911]};
end
else if (inst[3:0] == 4'd912) begin 
reg1 <= {data[911:0], data[DIM:912]};
end
else if (inst[3:0] == 4'd913) begin 
reg1 <= {data[912:0], data[DIM:913]};
end
else if (inst[3:0] == 4'd914) begin 
reg1 <= {data[913:0], data[DIM:914]};
end
else if (inst[3:0] == 4'd915) begin 
reg1 <= {data[914:0], data[DIM:915]};
end
else if (inst[3:0] == 4'd916) begin 
reg1 <= {data[915:0], data[DIM:916]};
end
else if (inst[3:0] == 4'd917) begin 
reg1 <= {data[916:0], data[DIM:917]};
end
else if (inst[3:0] == 4'd918) begin 
reg1 <= {data[917:0], data[DIM:918]};
end
else if (inst[3:0] == 4'd919) begin 
reg1 <= {data[918:0], data[DIM:919]};
end
else if (inst[3:0] == 4'd920) begin 
reg1 <= {data[919:0], data[DIM:920]};
end
else if (inst[3:0] == 4'd921) begin 
reg1 <= {data[920:0], data[DIM:921]};
end
else if (inst[3:0] == 4'd922) begin 
reg1 <= {data[921:0], data[DIM:922]};
end
else if (inst[3:0] == 4'd923) begin 
reg1 <= {data[922:0], data[DIM:923]};
end
else if (inst[3:0] == 4'd924) begin 
reg1 <= {data[923:0], data[DIM:924]};
end
else if (inst[3:0] == 4'd925) begin 
reg1 <= {data[924:0], data[DIM:925]};
end
else if (inst[3:0] == 4'd926) begin 
reg1 <= {data[925:0], data[DIM:926]};
end
else if (inst[3:0] == 4'd927) begin 
reg1 <= {data[926:0], data[DIM:927]};
end
else if (inst[3:0] == 4'd928) begin 
reg1 <= {data[927:0], data[DIM:928]};
end
else if (inst[3:0] == 4'd929) begin 
reg1 <= {data[928:0], data[DIM:929]};
end
else if (inst[3:0] == 4'd930) begin 
reg1 <= {data[929:0], data[DIM:930]};
end
else if (inst[3:0] == 4'd931) begin 
reg1 <= {data[930:0], data[DIM:931]};
end
else if (inst[3:0] == 4'd932) begin 
reg1 <= {data[931:0], data[DIM:932]};
end
else if (inst[3:0] == 4'd933) begin 
reg1 <= {data[932:0], data[DIM:933]};
end
else if (inst[3:0] == 4'd934) begin 
reg1 <= {data[933:0], data[DIM:934]};
end
else if (inst[3:0] == 4'd935) begin 
reg1 <= {data[934:0], data[DIM:935]};
end
else if (inst[3:0] == 4'd936) begin 
reg1 <= {data[935:0], data[DIM:936]};
end
else if (inst[3:0] == 4'd937) begin 
reg1 <= {data[936:0], data[DIM:937]};
end
else if (inst[3:0] == 4'd938) begin 
reg1 <= {data[937:0], data[DIM:938]};
end
else if (inst[3:0] == 4'd939) begin 
reg1 <= {data[938:0], data[DIM:939]};
end
else if (inst[3:0] == 4'd940) begin 
reg1 <= {data[939:0], data[DIM:940]};
end
else if (inst[3:0] == 4'd941) begin 
reg1 <= {data[940:0], data[DIM:941]};
end
else if (inst[3:0] == 4'd942) begin 
reg1 <= {data[941:0], data[DIM:942]};
end
else if (inst[3:0] == 4'd943) begin 
reg1 <= {data[942:0], data[DIM:943]};
end
else if (inst[3:0] == 4'd944) begin 
reg1 <= {data[943:0], data[DIM:944]};
end
else if (inst[3:0] == 4'd945) begin 
reg1 <= {data[944:0], data[DIM:945]};
end
else if (inst[3:0] == 4'd946) begin 
reg1 <= {data[945:0], data[DIM:946]};
end
else if (inst[3:0] == 4'd947) begin 
reg1 <= {data[946:0], data[DIM:947]};
end
else if (inst[3:0] == 4'd948) begin 
reg1 <= {data[947:0], data[DIM:948]};
end
else if (inst[3:0] == 4'd949) begin 
reg1 <= {data[948:0], data[DIM:949]};
end
else if (inst[3:0] == 4'd950) begin 
reg1 <= {data[949:0], data[DIM:950]};
end
else if (inst[3:0] == 4'd951) begin 
reg1 <= {data[950:0], data[DIM:951]};
end
else if (inst[3:0] == 4'd952) begin 
reg1 <= {data[951:0], data[DIM:952]};
end
else if (inst[3:0] == 4'd953) begin 
reg1 <= {data[952:0], data[DIM:953]};
end
else if (inst[3:0] == 4'd954) begin 
reg1 <= {data[953:0], data[DIM:954]};
end
else if (inst[3:0] == 4'd955) begin 
reg1 <= {data[954:0], data[DIM:955]};
end
else if (inst[3:0] == 4'd956) begin 
reg1 <= {data[955:0], data[DIM:956]};
end
else if (inst[3:0] == 4'd957) begin 
reg1 <= {data[956:0], data[DIM:957]};
end
else if (inst[3:0] == 4'd958) begin 
reg1 <= {data[957:0], data[DIM:958]};
end
else if (inst[3:0] == 4'd959) begin 
reg1 <= {data[958:0], data[DIM:959]};
end
else if (inst[3:0] == 4'd960) begin 
reg1 <= {data[959:0], data[DIM:960]};
end
else if (inst[3:0] == 4'd961) begin 
reg1 <= {data[960:0], data[DIM:961]};
end
else if (inst[3:0] == 4'd962) begin 
reg1 <= {data[961:0], data[DIM:962]};
end
else if (inst[3:0] == 4'd963) begin 
reg1 <= {data[962:0], data[DIM:963]};
end
else if (inst[3:0] == 4'd964) begin 
reg1 <= {data[963:0], data[DIM:964]};
end
else if (inst[3:0] == 4'd965) begin 
reg1 <= {data[964:0], data[DIM:965]};
end
else if (inst[3:0] == 4'd966) begin 
reg1 <= {data[965:0], data[DIM:966]};
end
else if (inst[3:0] == 4'd967) begin 
reg1 <= {data[966:0], data[DIM:967]};
end
else if (inst[3:0] == 4'd968) begin 
reg1 <= {data[967:0], data[DIM:968]};
end
else if (inst[3:0] == 4'd969) begin 
reg1 <= {data[968:0], data[DIM:969]};
end
else if (inst[3:0] == 4'd970) begin 
reg1 <= {data[969:0], data[DIM:970]};
end
else if (inst[3:0] == 4'd971) begin 
reg1 <= {data[970:0], data[DIM:971]};
end
else if (inst[3:0] == 4'd972) begin 
reg1 <= {data[971:0], data[DIM:972]};
end
else if (inst[3:0] == 4'd973) begin 
reg1 <= {data[972:0], data[DIM:973]};
end
else if (inst[3:0] == 4'd974) begin 
reg1 <= {data[973:0], data[DIM:974]};
end
else if (inst[3:0] == 4'd975) begin 
reg1 <= {data[974:0], data[DIM:975]};
end
else if (inst[3:0] == 4'd976) begin 
reg1 <= {data[975:0], data[DIM:976]};
end
else if (inst[3:0] == 4'd977) begin 
reg1 <= {data[976:0], data[DIM:977]};
end
else if (inst[3:0] == 4'd978) begin 
reg1 <= {data[977:0], data[DIM:978]};
end
else if (inst[3:0] == 4'd979) begin 
reg1 <= {data[978:0], data[DIM:979]};
end
else if (inst[3:0] == 4'd980) begin 
reg1 <= {data[979:0], data[DIM:980]};
end
else if (inst[3:0] == 4'd981) begin 
reg1 <= {data[980:0], data[DIM:981]};
end
else if (inst[3:0] == 4'd982) begin 
reg1 <= {data[981:0], data[DIM:982]};
end
else if (inst[3:0] == 4'd983) begin 
reg1 <= {data[982:0], data[DIM:983]};
end
else if (inst[3:0] == 4'd984) begin 
reg1 <= {data[983:0], data[DIM:984]};
end
else if (inst[3:0] == 4'd985) begin 
reg1 <= {data[984:0], data[DIM:985]};
end
else if (inst[3:0] == 4'd986) begin 
reg1 <= {data[985:0], data[DIM:986]};
end
else if (inst[3:0] == 4'd987) begin 
reg1 <= {data[986:0], data[DIM:987]};
end
else if (inst[3:0] == 4'd988) begin 
reg1 <= {data[987:0], data[DIM:988]};
end
else if (inst[3:0] == 4'd989) begin 
reg1 <= {data[988:0], data[DIM:989]};
end
else if (inst[3:0] == 4'd990) begin 
reg1 <= {data[989:0], data[DIM:990]};
end
else if (inst[3:0] == 4'd991) begin 
reg1 <= {data[990:0], data[DIM:991]};
end
else if (inst[3:0] == 4'd992) begin 
reg1 <= {data[991:0], data[DIM:992]};
end
else if (inst[3:0] == 4'd993) begin 
reg1 <= {data[992:0], data[DIM:993]};
end
else if (inst[3:0] == 4'd994) begin 
reg1 <= {data[993:0], data[DIM:994]};
end
else if (inst[3:0] == 4'd995) begin 
reg1 <= {data[994:0], data[DIM:995]};
end
else if (inst[3:0] == 4'd996) begin 
reg1 <= {data[995:0], data[DIM:996]};
end
else if (inst[3:0] == 4'd997) begin 
reg1 <= {data[996:0], data[DIM:997]};
end
else if (inst[3:0] == 4'd998) begin 
reg1 <= {data[997:0], data[DIM:998]};
end
else if (inst[3:0] == 4'd999) begin 
reg1 <= {data[998:0], data[DIM:999]};
end
else if (inst[3:0] == 4'd1000) begin 
reg1 <= {data[999:0], data[DIM:1000]};
end
else if (inst[3:0] == 4'd1001) begin 
reg1 <= {data[1000:0], data[DIM:1001]};
end
else if (inst[3:0] == 4'd1002) begin 
reg1 <= {data[1001:0], data[DIM:1002]};
end
else if (inst[3:0] == 4'd1003) begin 
reg1 <= {data[1002:0], data[DIM:1003]};
end
else if (inst[3:0] == 4'd1004) begin 
reg1 <= {data[1003:0], data[DIM:1004]};
end
else if (inst[3:0] == 4'd1005) begin 
reg1 <= {data[1004:0], data[DIM:1005]};
end
else if (inst[3:0] == 4'd1006) begin 
reg1 <= {data[1005:0], data[DIM:1006]};
end
else if (inst[3:0] == 4'd1007) begin 
reg1 <= {data[1006:0], data[DIM:1007]};
end
else if (inst[3:0] == 4'd1008) begin 
reg1 <= {data[1007:0], data[DIM:1008]};
end
else if (inst[3:0] == 4'd1009) begin 
reg1 <= {data[1008:0], data[DIM:1009]};
end
else if (inst[3:0] == 4'd1010) begin 
reg1 <= {data[1009:0], data[DIM:1010]};
end
else if (inst[3:0] == 4'd1011) begin 
reg1 <= {data[1010:0], data[DIM:1011]};
end
else if (inst[3:0] == 4'd1012) begin 
reg1 <= {data[1011:0], data[DIM:1012]};
end
else if (inst[3:0] == 4'd1013) begin 
reg1 <= {data[1012:0], data[DIM:1013]};
end
else if (inst[3:0] == 4'd1014) begin 
reg1 <= {data[1013:0], data[DIM:1014]};
end
else if (inst[3:0] == 4'd1015) begin 
reg1 <= {data[1014:0], data[DIM:1015]};
end
else if (inst[3:0] == 4'd1016) begin 
reg1 <= {data[1015:0], data[DIM:1016]};
end
else if (inst[3:0] == 4'd1017) begin 
reg1 <= {data[1016:0], data[DIM:1017]};
end
else if (inst[3:0] == 4'd1018) begin 
reg1 <= {data[1017:0], data[DIM:1018]};
end
else if (inst[3:0] == 4'd1019) begin 
reg1 <= {data[1018:0], data[DIM:1019]};
end
else if (inst[3:0] == 4'd1020) begin 
reg1 <= {data[1019:0], data[DIM:1020]};
end
else if (inst[3:0] == 4'd1021) begin 
reg1 <= {data[1020:0], data[DIM:1021]};
end
else if (inst[3:0] == 4'd1022) begin 
reg1 <= {data[1021:0], data[DIM:1022]};
end
else if (inst[3:0] == 4'd1023) begin 
reg1 <= {data[1022:0], data[DIM:1023]};
end
